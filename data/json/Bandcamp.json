{
  "company": "Bandcamp",
  "title": "Bandcamp",
  "xmlUrl": "https://bandcamptech.wordpress.com/feed/",
  "htmlUrl": "https://bandcamptech.wordpress.com/",
  "content": "\n\n\n\nBe careful how you rsyslog | Bandcamp Tech\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\nBandcamp Tech\nDr. Zaius Dr. Zaius\n\n\n\n\n\n\u00ab Expression Evaluators\n\n\n\nBe careful how you\u00a0rsyslog\nby Leigh Dyer \n\nBandcamp was offline briefly yesterday due to what I like to call an unexpected single point of failure. Good systems design is all about addressing single points of failure, making sure you have redundancies in place, but sometimes you discover single points of failure that you didn\u2019t realise you had.\nYesterday\u2019s problem was caused by maintenance on our central rsyslog server, which we use to collect analytics from our application servers. When that central server went down, it set a chain of events in motion:\n\nRemote logging from our app servers blocked, since we have rsyslog configured to use TCP, which attempts to guarantee delivery.\nThose blocked messages blocked all syslog logging on the app servers, since the default rsyslog configuration puts all logging in to a single delivery queue.\nWithin minutes that delivery queue filled up, causing all subsequent logging requests to block, freezing not just our apps but also system services like sshd. So, no logging in.\n\nIn the course of responding to the outage we quickly decided it was prudent to reboot the affected servers before continuing to investigate the root cause. We didn\u2019t know at the time that once we restarted our apps the countdown clock started ticking. Fortunately we got to the bottom of the problem before the servers froze up again.\nLesson learned! Our rsyslog configuration now uses a dedicated queue for remote logging, and that queue spills over to disk if it fills up, preventing rsyslog from blocking logging if the central server goes offline. Here\u2019s the relevant code:\n\n\r\n$ActionQueueType LinkedList\r\n$ActionQueueFileName apptimer\r\n$ActionResumeRetryCount -1\r\n$ActionQueueSaveOnShutdown on\r\nlocal0.* @@rsyslogserver:10514\r\n\n\n\u00a0\n\u00a0Leigh Dyer is the Lead Engineer of the Systems Team at Bandcamp, Inc.\n\n\n \nLike Loading...\n\nRelated\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\tThis entry was posted on 2015-04-28 at 18:29:22 and is filed under Uncategorized.\t\t\t\t\t\tYou can follow any responses to this entry through the RSS 2.0 feed.\n\t\t\t\t\t\t\t\t\t\t\t\t\tYou can leave a response, or trackback from your own site.\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\n\n\nOne Response to \u201cBe careful how you\u00a0rsyslog\u201d\n\n\n Elmer Fud Says:\t\t\t\t\t\t\n2015-04-28 at 18:57:53 \nIf your disk fills up your queue will still block, or if the disk is somehow unavailable for writing.  You might want to also consider adding the following 2 options as well.\n$ActionQueueMaxDiskSpace 512m   # limit amount of disk space used\n$ActionQueueTimeoutEnqueue 0 # Drop messages with no wait when they can\u2019t be queued\n\n\n\n\n\n\n\nLeave a Reply\n\n\n\n\u0394 \n\n\n\n\nBlog at WordPress.com.\nEntries (RSS) and Comments (RSS).\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\tPrivacy & Cookies: This site uses cookies. By continuing to use this website, you agree to their use. \nTo find out more, including how to control cookies, see here:\n\t\t\t\t\n\t\t\tCookie Policy\t\t\n\n\n \n\n\n\n Comment\t\t\t\t\t\t\n\n\n\n\nReblog\n\n\n\n\n\nSubscribe\n\n\n\nSubscribed\n\n\n\n\n\n\n\n\t\t\t\tBandcamp Tech\t\t\t\n\n\n\n\n\n\n\n\n\n\n \n\n\t\t\t\t\t\t\t\t\t\t\t\tSign me up\t\t\t\t\t\t\t\t\t\t\t\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t\tAlready have a WordPress.com account? Log in now. \n\n\n\n\n\n\n \n\n\n\n\n\n\t\t\t\tBandcamp Tech\t\t\t\n\n\n\n Customize\n\n\n\n\n\nSubscribe\n\n\n\nSubscribed\n\n\nSign up\nLog in\nCopy shortlink\n\n\n\t\t\t\t\t\t\t\t\t\t\tReport this content\t\t\t\t\t\t\t\t\t\t\n\n\n\n\t\t\t\t\t\t\t\t\t\t\tView post in Reader\t\t\t\t\t\t\t\t\t\t\n\n\nManage subscriptions\n\nCollapse this bar\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n%d \n\n\n \n\n\n\n\n\n",
  "latestPost": {
    "title": "Be careful how you rsyslog",
    "title_detail": {
      "type": "text/plain",
      "language": null,
      "base": "https://bandcamptech.wordpress.com/feed/",
      "value": "Be careful how you rsyslog"
    },
    "links": [
      {
        "rel": "alternate",
        "type": "text/html",
        "href": "https://bandcamptech.wordpress.com/2015/04/28/be-careful-how-you-rsyslog/"
      }
    ],
    "link": "https://bandcamptech.wordpress.com/2015/04/28/be-careful-how-you-rsyslog/",
    "comments": "https://bandcamptech.wordpress.com/2015/04/28/be-careful-how-you-rsyslog/#comments",
    "authors": [
      {
        "name": "Leigh Dyer"
      }
    ],
    "author": "Leigh Dyer",
    "author_detail": {
      "name": "Leigh Dyer"
    },
    "published": "Tue, 28 Apr 2015 18:29:22 +0000",
    "published_parsed": [
      2015,
      4,
      28,
      18,
      29,
      22,
      1,
      118,
      0
    ],
    "tags": [
      {
        "term": "Uncategorized",
        "scheme": null,
        "label": null
      }
    ],
    "id": "http://bandcamptech.wordpress.com/?p=302",
    "guidislink": false,
    "summary": "Bandcamp was offline briefly yesterday due to what I like to call an unexpected single point of failure. Good systems design is all about addressing single points of failure, making sure you have redundancies in place, but sometimes you discover single points of failure that you didn\u2019t realise you had. Yesterday\u2019s problem was caused by [&#8230;]",
    "summary_detail": {
      "type": "text/html",
      "language": null,
      "base": "https://bandcamptech.wordpress.com/feed/",
      "value": "Bandcamp was offline briefly yesterday due to what I like to call an unexpected single point of failure. Good systems design is all about addressing single points of failure, making sure you have redundancies in place, but sometimes you discover single points of failure that you didn\u2019t realise you had. Yesterday\u2019s problem was caused by [&#8230;]"
    },
    "content": [
      {
        "type": "text/html",
        "language": null,
        "base": "https://bandcamptech.wordpress.com/feed/",
        "value": "<p>Bandcamp was offline briefly yesterday due to what I like to call an <em>unexpected single point of failure</em>. Good systems design is all about addressing single points of failure, making sure you have redundancies in place, but sometimes you discover single points of failure that you didn\u2019t realise you had.</p>\n<p>Yesterday\u2019s problem was caused by maintenance on our central rsyslog server, which we use to collect analytics from our application servers. When that central server went down, it set a chain of events in motion:</p>\n<ul>\n<li>Remote logging from our app servers blocked, since we have rsyslog configured to use TCP, which attempts to guarantee delivery.</li>\n<li>Those blocked messages blocked <em>all</em> syslog logging on the app servers, since the default rsyslog configuration puts all logging in to a single delivery queue.</li>\n<li>Within minutes that delivery queue filled up, causing all subsequent logging requests to block, freezing not just our apps but also system services like sshd. So, no logging in.</li>\n</ul>\n<p>In the course of responding to the outage we quickly decided it was prudent to reboot the affected servers before continuing to investigate the root cause. We didn&#8217;t know at the time that once we restarted our apps the countdown clock started ticking. Fortunately we got to the bottom of the problem before the servers froze up again.</p>\n<p>Lesson learned! Our rsyslog configuration now uses a dedicated queue for remote logging, and that queue spills over to disk if it fills up, preventing rsyslog from blocking logging if the central server goes offline. Here&#8217;s the relevant code:</p>\n<blockquote>\n<pre>\n$ActionQueueType LinkedList\n$ActionQueueFileName apptimer\n$ActionResumeRetryCount -1\n$ActionQueueSaveOnShutdown on\nlocal0.* @@rsyslogserver:10514\n</pre>\n</blockquote>\n<p>&nbsp;</p>\n<p>&nbsp;<em><small>Leigh Dyer is the Lead Engineer of the Systems Team at Bandcamp, Inc.</small></em></p>"
      }
    ],
    "wfw_commentrss": "https://bandcamptech.wordpress.com/2015/04/28/be-careful-how-you-rsyslog/feed/",
    "slash_comments": "1",
    "media_content": [
      {
        "url": "https://2.gravatar.com/avatar/8fcad6350f0310b03b1464efe4559b9dda76a8bfffcf0e16ce2bdad5096d0417?s=96&d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&r=G",
        "medium": "image"
      }
    ]
  }
}