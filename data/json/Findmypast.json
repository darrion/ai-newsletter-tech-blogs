{
  "company": "Findmypast",
  "title": "Findmypast",
  "xmlUrl": "https://tech.findmypast.com/feed.xml",
  "htmlUrl": "http://tech.findmypast.com/",
  "content": "\n\n\n\n\n\nDevOps at Findmypast: How Spanners implement DevOps Practices | Findmypast Tech\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          Back to articles\n        \n\n\nDevOps at Findmypast: How Spanners implement DevOps Practices\n\n\n\n\n\n\n\n\nRobbie Hill\n\n\n      \n      August \n      21st, \n      2023\n    \nReading time: \n\n\n\n\n10\n min\n\n\n\n\nIntroduction\nThere are many ways to define DevOps and even more ways to implement its core principles within an organisation. To the Spanners team, DevOps is an iterative and collaborative approach to the development, testing, deployment and monitoring of software services. Overall, there is a great deal of alignment with the thoughts outlined by Mueller and Willis regarding what DevOps is, and how it is best implemented.\nSpanners see our role within the wider engineering cohort at Findmypast as advocates for DevOps principles and practices, and the vehicle through which those practices can be implemented day-to-day. Spanners operate as an autonomous team, but our efforts centre around providing feature teams with the processes and tools they need to reap the rewards of following a DevOps approach when developing and maintaining services.\n\n\n\n\nSource: Atlassian\n\nTeam Goals\nOur goals always trace back to wider organisation goals that in turn align with the expected company and department behaviours. For Spanners our quarterly team goals generally focus on how we improve five key areas in terms of software delivery across the engineering teams:\n\nSpeed of Deployment \u2013 The rate of code deployments and the speed with which code can be built, tested and deployed to our environments.\nCollaboration \u2013 Enable teams to investigate issues and monitor services and systems using a well-defined and trusted series of tools. Providing a framework for teams to take Ownership of the service pipelines (sometimes described as \u201cYou build it, you run it\u201d).\nQuality \u2013 Enable teams to continually improve upon their service/s through automation in the form of CI/CD pipelines, and quickly identify issues and shortcomings in those implementations.\nReliability \u2013 Reduce variables when it comes to the building, testing and deployment of code changes, and provide near real-time feedback (measurement) of the effectiveness of those code changes.\nSecurity \u2013 We strive to manage everything as code and provide the tools and means for all engineers to do their jobs with minimal friction, building security and accountability into everything we deliver.\n\nThe Team\nThe Spanners team comprises eight engineers, supporting a wider engineering cohort of roughly 120 engineers and management.  Backgrounds within the team vary, some members having more of an operations background, whilst others have more of a development background.  The Spanners team is truly multi-disciplinary, with a variety of skill levels ranging from senior to junior, and a variety of specialisms within the team.  This breadth of knowledge enables Spanners to provide a one-stop-shop for support of the product build pipelines and underpinning technologies.\nSpanners operate like any other feature team within the wider engineering group.  We follow an agile methodology built around a fortnightly sprint cycle, and follow a regular cadence of planning, refining and retrospective meetings.\nTo ensure queries from the wider engineering group are answered in good time, we operate a support rota, whereby a team member is assigned as an initial point-of-contact for queries.  This ensures that the team is always on hand to collaborate with a feature team on a request or an incident.\nThe Challenge\nOne underappreciated aspect of software development is the need to integrate new team members into the engineering cohort.  Without a smooth on-boarding process both the new and existing team members can become bogged down in the configuration of systems, tools and certificates. Ultimately, this results in a negative impact to the speed of deployment, reliability and security key areas that we as a team are constantly striving to improve.\n\n\n\nThe Solution\nFrom our initial investigations we identified that all systems that teams were interfacing with during the on/off-boarding process could be interacted with using RESTful APIs, so the obvious solution was to wrap these interactions in a higher-level API provided by a single service.\n\n\n\n\n\n\n\nA sample of the systems and tools we configure for new starters\n\nThe catalyst for prioritising the development of the service was a rapid growth in the engineering team cohort, which included new engineers joining the Spanners team.  This meant that we began to see first-hand the shortcomings in the existing processes, the pressure this placed upon feature teams, and the detrimental effects for new starters.\nWorking in sprint cycles meant we had allocated time to define, refine and plan for tickets that would deliver upon the prescribed solution to reduce friction for the on-boarding and off-boarding processes.  Quickly T-shirt sizing the initial tickets we could see this would be more than just a trivial task, and as such we defined an Epic, and made it our quarterly goal.\nWe started by engaging stakeholders responsible for the on/off-boarding processes, and development got underway at the beginning of the next quarter.  Within four weeks we had our minimal viable product (MVP) ready for demonstration to stakeholders.\n\n\n\n\nService Swagger Interface\n\nScaffolding up the service, repository and build pipeline was very straightforward thanks to a pre-existing service developed by Spanners.  This service bootstraps a microservice from nothing but a name to a fully deployable project, interfacing with Github and Teamcity (our CI/CD solution) to define a repository, populate it with templates and define a build pipeline.  This scaffolding service is another example of how Spanners have applied DevOps principles and practices to find a solution to a business problem.\nThe on/off-boarding MVP configured access to several of our systems (Jira, VictorOps, Launch Darkly, Github and Teamcity), as well as configured the user\u2019s device, installing applications and CLI tools (VS Code, NPM, docker etc.) required for them to do their job on either Linux, Mac or Windows OS.\ninstallHelm() { \ncd /tmp \n# Check for installed version of Helm \nCUR_HELM_VER=`/usr/local/bin/helm version 2> /dev/null | grep \"Version:\" | cut -d \",\" -f 1 | cut -d \":\" -f 2 | sed 's/\"//g'` \nif [[ $CUR_HELM_VER == $HELM_VER ]] \nthen \nlog \"Helm already installed, and at the correct version.\" \nelse \nlog \"Installing helm: ${HELM_VER}\" \ncurl -LO https://get.helm.sh/helm-${HELM_VER}-linux-amd64.tar.gz \ntar -zxf helm-${HELM_VER}-linux-amd64.tar.gz \n\n# Install Helm executable  \nsudo mv ./linux-amd64/helm /usr/local/bin \nlog \"Helm successfully installed to version ${HELM_VER}.\" \nfi \n} \n\nExtract of our Linux (Ubuntu) setup script\nIt also fulfilled the off-boarding requirement, enabling administrators to clean-up user accounts when an engineer left the company.\nIn a commitment to \u201cshift left\u201d, most of the service codebase was developed with unit and integration tests from the very start. Unit tests are run using the jest framework, and triggered locally on a pre-push hook, whilst integration tests are run on each and every build.  All build pipeline configuration to run tests is pre-configured in our build pipelines, and all of it bootstrapped by our scaffolding service.\nAs the services need to interface with systems (both internal and external) at an administrative level securing the credentials to interface with these systems is of course required.  This was not much of an issue to implement though, as we already operate an on-premise Vault cluster and our scaffolded build pipelines have pre-defined secure methods to interact with this Vault instance.\nSpanners regularly deliver workshop sessions to the Engineering cohort in which we take a deep dive in to recent or upcoming changes to processes and technology.  Following completion of the MVP we delivered one such workshop session regarding the new service.  The feedback gathered resulted in several tickets being defined, and as they were executed incremental improvements were made to the scripts and endpoints of the service.   Due to changes being applied directly to the trunk branch, and test automation in the build pipeline, each change could be verified by stakeholders, and benefits realised immediately.\nmodule.exports.createAccount = async ({ username }) => {\n  const response = await callApi(\n    `members`,\n    'POST',\n    JSON.stringify([\n      {\n        email: `${username}${fmpEmail}`,\n        role: 'writer',\n      },\n    ])\n  );\n\n  if (![200, 201].includes(response.status)) {\n    const error = await response.text();\n    throw new StaffAPIError({\n      message: `Failed to setup new joiner ${username} with access to Launch Darkly`,\n      error,\n      statusCode: response.status,\n    });\n  } else {\n    logger.info(`A Launch Darkly account for new joiner ${username} has been made successfully!`);\n  }\n};\n\nExample on-boarding API call\nThe service was shortly thereafter demonstrated to the wider engineering team, and flagged as the replacement to previous on/off-boarding procedures. Documentation throughout our codebase was updated to signpost the new service as the one-stop-shop for on/off-boarding staff.\nMigration to use of the script was very smooth, due to the engineering cohort now being able to self-serve on/off-boarding requests.\nWhat are Spanners working on now?\nWorking on the service opened the teams eyes to security loopholes and blind spots within our environment, which put us on the path to improving the role based access controls (RBAC) provided to the engineering cohort. We are in the process of improving security within our network by implementing RBAC for engineer access to servers (via SSH & RDP) and Kubernetes resources.\nConclusion\nI hope the above has given you an idea of how Spanners implement DevOps principles within the wider Engineering cohort at Findmypast. The values held by the company and the behaviours expected from staff, lay a great foundation for the adoption of DevOps practices by the entire Engineering cohort.  Behavioural expectations at the organisational level such as \u201cWe use data to fail fast and learn how to do it differently next time\u201d, and \u201cWe share our knowledge to empower the people around us\u201d, really resonate with the DevOps principles of continuous improvement and collaboration respectively.  In practice these principles mean that new engineers very easily adopt DevOps practices. Yielding improved outcomes for both the individual and the business, with teams acting autonomously to experiment and deliver product enhancements at a rapid pace.\nWe may be looking for engineers to join our team. If you\u2019re interested contact us, or check out our current vacancies.\n\n\n\nRecent articles\n\n\nDevOps at Findmypast: How Spanners implement DevOps Practices\n\n\n\nReading time: \n\n\n\n\n10\n min\n\n\n\n\n\nDevOps at Findmypast: Postgres Database Upgrades\n\n\n\nReading time: \n\n\n\n\n13\n min\n\n\n\n\n\nData Science at FMP: Tree Structure Analysis\n\n\n\nReading time: \n\n\n\n\n6\n min\n\n\n\n\n\nScaling Findmypast for 1921 Census release - Part 3\n\n\n\nReading time: \n\n\n\n\n16\n min\n\n\n\n\n\nTesting Library ByRole Performance Improvements\n\n\n\nReading time: \n\n\n\n\n4\n min\n\n\n\n\n\nTeam Diversity\n\n\n\nReading time: \n\n\n\n\n2\n min\n\n\n\n\n\n\n\n\n\nPlease enable JavaScript to view the comments powered by Disqus.\n\n\n\n\n\n\n",
  "latestPost": {
    "title": "DevOps at Findmypast: How Spanners implement DevOps Practices",
    "title_detail": {
      "type": "text/plain",
      "language": null,
      "base": "https://tech.findmypast.com/feed.xml",
      "value": "DevOps at Findmypast: How Spanners implement DevOps Practices"
    },
    "summary": "<p><strong>Introduction</strong></p>\n\n<p>There are many ways to define DevOps and even more ways to implement its core principles within an organisation. To the Spanners team, DevOps is an iterative and collaborative approach to the development, testing, deployment and monitoring of software services. Overall, there is a great deal of alignment with the thoughts outlined by <a href=\"https://theagileadmin.com/what-is-devops/\">Mueller</a> and <a href=\"https://www.chef.io/blog/what-devops-means-to-me\">Willis</a> regarding what DevOps is, and how it is best implemented.</p>\n\n<p>Spanners see our role within the wider engineering cohort at <a href=\"https://www.findmypast.com/\">Findmypast</a> as advocates for DevOps principles and practices, and the vehicle through which those practices can be implemented day-to-day. Spanners operate as an autonomous team, but our efforts centre around providing feature teams with the processes and tools they need to reap the rewards of following a DevOps approach when developing and maintaining services.</p>\n\n<div align=\"center\">\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/atlassian-devops.png\" width=\"900\" />\n</div>\n<div align=\"center\">\n  <p>Source: <a href=\"https://www.atlassian.com/devops/what-is-devops\">Atlassian</a></p>\n</div>\n\n<p><strong>Team Goals</strong></p>\n\n<p>Our goals always trace back to wider organisation goals that in turn align with the expected company and department behaviours. For Spanners our quarterly team goals generally focus on how we improve five key areas in terms of software delivery across the engineering teams:</p>\n\n<ul>\n  <li><strong>Speed of Deployment</strong> \u2013 The rate of code deployments and the speed with which code can be built, tested and deployed to our environments.</li>\n  <li><strong>Collaboration</strong> \u2013 Enable teams to investigate issues and monitor services and systems using a well-defined and trusted series of tools. Providing a framework for teams to take Ownership of the service pipelines (sometimes described as \u201cYou build it, you run it\u201d).</li>\n  <li><strong>Quality</strong> \u2013 Enable teams to continually improve upon their service/s through automation in the form of CI/CD pipelines, and quickly identify issues and shortcomings in those implementations.</li>\n  <li><strong>Reliability</strong> \u2013 Reduce variables when it comes to the building, testing and deployment of code changes, and provide near real-time feedback (measurement) of the effectiveness of those code changes.</li>\n  <li><strong>Security</strong> \u2013 We strive to manage everything as code and provide the tools and means for all engineers to do their jobs with minimal friction, building security and accountability into everything we deliver.</li>\n</ul>\n\n<p><strong>The Team</strong></p>\n\n<p>The Spanners team comprises eight engineers, supporting a wider engineering cohort of roughly 120 engineers and management.  Backgrounds within the team vary, some members having more of an operations background, whilst others have more of a development background.  The Spanners team is truly multi-disciplinary, with a variety of skill levels ranging from senior to junior, and a variety of specialisms within the team.  This breadth of knowledge enables Spanners to provide a one-stop-shop for support of the product build pipelines and underpinning technologies.</p>\n\n<p>Spanners operate like any other feature team within the wider engineering group.  We follow an agile methodology built around a fortnightly sprint cycle, and follow a regular cadence of planning, refining and retrospective meetings.</p>\n\n<p>To ensure queries from the wider engineering group are answered in good time, we operate a support rota, whereby a team member is assigned as an initial point-of-contact for queries.  This ensures that the team is always on hand to collaborate with a feature team on a request or an incident.</p>\n\n<p><strong>The Challenge</strong></p>\n\n<p>One underappreciated aspect of software development is the need to integrate new team members into the engineering cohort.  Without a smooth on-boarding process both the new and existing team members can become bogged down in the configuration of systems, tools and certificates. Ultimately, this results in a negative impact to the speed of deployment, reliability and security key areas that we as a team are constantly striving to improve.</p>\n\n<div align=\"center\">\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/aboard.webp\" width=\"900\" />\n</div>\n\n<p><strong>The Solution</strong></p>\n\n<p>From our initial investigations we identified that all systems that teams were interfacing with during the on/off-boarding process could be interacted with using RESTful APIs, so the obvious solution was to wrap these interactions in a higher-level API provided by a single service.</p>\n\n<div align=\"center\">\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/victorops-logo.png\" width=\"200\" />\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/github-logo.png\" width=\"200\" />\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/docker-icon.png\" width=\"200\" />\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/node-js.svg\" width=\"200\" />\n</div>\n<div align=\"center\">\n  <p><em>A sample of the systems and tools we configure for new starters</em></p>\n</div>\n\n<p>The catalyst for prioritising the development of the service was a rapid growth in the engineering team cohort, which included new engineers joining the Spanners team.  This meant that we began to see first-hand the shortcomings in the existing processes, the pressure this placed upon feature teams, and the detrimental effects for new starters.</p>\n\n<p>Working in sprint cycles meant we had allocated time to define, refine and plan for tickets that would deliver upon the prescribed solution to reduce friction for the on-boarding and off-boarding processes.  Quickly <a href=\"https://asana.com/resources/t-shirt-sizing\">T-shirt sizing</a> the initial tickets we could see this would be more than just a trivial task, and as such we defined an Epic, and made it our quarterly goal.</p>\n\n<p>We started by engaging stakeholders responsible for the on/off-boarding processes, and development got underway at the beginning of the next quarter.  Within four weeks we had our minimal viable product (MVP) ready for demonstration to stakeholders.</p>\n\n<div align=\"center\">\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/staff-swagger.png\" width=\"900\" />\n</div>\n<div align=\"center\">\n  <p><em>Service Swagger Interface</em></p>\n</div>\n\n<p>Scaffolding up the service, repository and build pipeline was very straightforward thanks to a pre-existing service developed by Spanners.  This service bootstraps a microservice from nothing but a name to a fully deployable project, interfacing with Github and Teamcity (our CI/CD solution) to define a repository, populate it with templates and define a build pipeline.  This scaffolding service is another example of how Spanners have applied DevOps principles and practices to find a solution to a business problem.</p>\n\n<p>The on/off-boarding MVP configured access to several of our systems (Jira, VictorOps, Launch Darkly, Github and Teamcity), as well as configured the user\u2019s device, installing applications and CLI tools (VS Code, NPM, docker etc.) required for them to do their job on either Linux, Mac or Windows OS.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>installHelm<span class=\"o\">()</span> <span class=\"o\">{</span> \n<span class=\"nb\">cd</span> /tmp \n<span class=\"c\"># Check for installed version of Helm </span>\n<span class=\"nv\">CUR_HELM_VER</span><span class=\"o\">=</span><span class=\"sb\">`</span>/usr/local/bin/helm version 2&gt; /dev/null | <span class=\"nb\">grep</span> <span class=\"s2\">\"Version:\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span> <span class=\"s2\">\",\"</span> <span class=\"nt\">-f</span> 1 | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span> <span class=\"s2\">\":\"</span> <span class=\"nt\">-f</span> 2 | <span class=\"nb\">sed</span> <span class=\"s1\">'s/\"//g'</span><span class=\"sb\">`</span> \n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$CUR_HELM_VER</span> <span class=\"o\">==</span> <span class=\"nv\">$HELM_VER</span> <span class=\"o\">]]</span> \n<span class=\"k\">then \n</span>log <span class=\"s2\">\"Helm already installed, and at the correct version.\"</span> \n<span class=\"k\">else \n</span>log <span class=\"s2\">\"Installing helm: </span><span class=\"k\">${</span><span class=\"nv\">HELM_VER</span><span class=\"k\">}</span><span class=\"s2\">\"</span> \ncurl <span class=\"nt\">-LO</span> https://get.helm.sh/helm-<span class=\"k\">${</span><span class=\"nv\">HELM_VER</span><span class=\"k\">}</span><span class=\"nt\">-linux-amd64</span>.tar.gz \n<span class=\"nb\">tar</span> <span class=\"nt\">-zxf</span> helm-<span class=\"k\">${</span><span class=\"nv\">HELM_VER</span><span class=\"k\">}</span><span class=\"nt\">-linux-amd64</span>.tar.gz \n\n<span class=\"c\"># Install Helm executable  </span>\n<span class=\"nb\">sudo mv</span> ./linux-amd64/helm /usr/local/bin \nlog <span class=\"s2\">\"Helm successfully installed to version </span><span class=\"k\">${</span><span class=\"nv\">HELM_VER</span><span class=\"k\">}</span><span class=\"s2\">.\"</span> \n<span class=\"k\">fi</span> \n<span class=\"o\">}</span> \n</code></pre></div></div>\n\n<p><em>Extract of our Linux (Ubuntu) setup script</em></p>\n\n<p>It also fulfilled the off-boarding requirement, enabling administrators to clean-up user accounts when an engineer left the company.</p>\n\n<p>In a commitment to \u201c<a href=\"https://www.dynatrace.com/news/blog/what-is-shift-left-and-what-is-shift-right/#what-does-shift-left-mean-in-devops\">shift left</a>\u201d, most of the service codebase was developed with unit and integration tests from the very start. Unit tests are run using the <a href=\"https://jestjs.io/\">jest</a> framework, and triggered locally on a pre-push hook, whilst integration tests are run on each and every build.  All build pipeline configuration to run tests is pre-configured in our build pipelines, and all of it bootstrapped by our scaffolding service.</p>\n\n<p>As the services need to interface with systems (both internal and external) at an administrative level securing the credentials to interface with these systems is of course required.  This was not much of an issue to implement though, as we already operate an on-premise <a href=\"https://www.vaultproject.io/\">Vault cluster</a> and our scaffolded build pipelines have pre-defined secure methods to interact with this Vault instance.</p>\n\n<p>Spanners regularly deliver workshop sessions to the Engineering cohort in which we take a deep dive in to recent or upcoming changes to processes and technology.  Following completion of the MVP we delivered one such workshop session regarding the new service.  The feedback gathered resulted in several tickets being defined, and as they were executed incremental improvements were made to the scripts and endpoints of the service.   Due to changes being applied directly to the trunk branch, and test automation in the build pipeline, each change could be verified by stakeholders, and benefits realised immediately.</p>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span><span class=\"p\">.</span><span class=\"nx\">createAccount</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">({</span> <span class=\"nx\">username</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">callApi</span><span class=\"p\">(</span>\n    <span class=\"s2\">`members`</span><span class=\"p\">,</span>\n    <span class=\"dl\">'</span><span class=\"s1\">POST</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">([</span>\n      <span class=\"p\">{</span>\n        <span class=\"na\">email</span><span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">username</span><span class=\"p\">}${</span><span class=\"nx\">fmpEmail</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">,</span>\n        <span class=\"na\">role</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">writer</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">])</span>\n  <span class=\"p\">);</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">201</span><span class=\"p\">].</span><span class=\"nx\">includes</span><span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">status</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">error</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">text</span><span class=\"p\">();</span>\n    <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nx\">StaffAPIError</span><span class=\"p\">({</span>\n      <span class=\"na\">message</span><span class=\"p\">:</span> <span class=\"s2\">`Failed to setup new joiner </span><span class=\"p\">${</span><span class=\"nx\">username</span><span class=\"p\">}</span><span class=\"s2\"> with access to Launch Darkly`</span><span class=\"p\">,</span>\n      <span class=\"nx\">error</span><span class=\"p\">,</span>\n      <span class=\"na\">statusCode</span><span class=\"p\">:</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">status</span><span class=\"p\">,</span>\n    <span class=\"p\">});</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"nx\">logger</span><span class=\"p\">.</span><span class=\"nx\">info</span><span class=\"p\">(</span><span class=\"s2\">`A Launch Darkly account for new joiner </span><span class=\"p\">${</span><span class=\"nx\">username</span><span class=\"p\">}</span><span class=\"s2\"> has been made successfully!`</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div></div>\n<p><em>Example on-boarding API call</em></p>\n\n<p>The service was shortly thereafter demonstrated to the wider engineering team, and flagged as the replacement to previous on/off-boarding procedures. Documentation throughout our codebase was updated to signpost the new service as the one-stop-shop for on/off-boarding staff.</p>\n\n<p>Migration to use of the script was very smooth, due to the engineering cohort now being able to self-serve on/off-boarding requests.</p>\n\n<p><strong>What are Spanners working on now?</strong></p>\n\n<p>Working on the service opened the teams eyes to security loopholes and blind spots within our environment, which put us on the path to improving the role based access controls (RBAC) provided to the engineering cohort. We are in the process of improving security within our network by implementing RBAC for engineer access to servers (via SSH &amp; RDP) and Kubernetes resources.</p>\n\n<p><strong>Conclusion</strong></p>\n\n<p>I hope the above has given you an idea of how Spanners implement DevOps principles within the wider Engineering cohort at Findmypast. The values held by the company and the behaviours expected from staff, lay a great foundation for the adoption of DevOps practices by the entire Engineering cohort.  Behavioural expectations at the organisational level such as \u201cWe use data to fail fast and learn how to do it differently next time\u201d, and \u201cWe share our knowledge to empower the people around us\u201d, really resonate with the DevOps principles of continuous improvement and collaboration respectively.  In practice these principles mean that new engineers very easily adopt DevOps practices. Yielding improved outcomes for both the individual and the business, with teams acting autonomously to experiment and deliver product enhancements at a rapid pace.</p>\n\n<p>We may be looking for engineers to join our team. If you\u2019re interested <a href=\"https://www.findmypast.co.uk/help/contact\">contact us</a>, or check out our <a href=\"https://findmypast.pinpointhq.com/\">current vacancies</a>.</p>",
    "summary_detail": {
      "type": "text/html",
      "language": null,
      "base": "https://tech.findmypast.com/feed.xml",
      "value": "<p><strong>Introduction</strong></p>\n\n<p>There are many ways to define DevOps and even more ways to implement its core principles within an organisation. To the Spanners team, DevOps is an iterative and collaborative approach to the development, testing, deployment and monitoring of software services. Overall, there is a great deal of alignment with the thoughts outlined by <a href=\"https://theagileadmin.com/what-is-devops/\">Mueller</a> and <a href=\"https://www.chef.io/blog/what-devops-means-to-me\">Willis</a> regarding what DevOps is, and how it is best implemented.</p>\n\n<p>Spanners see our role within the wider engineering cohort at <a href=\"https://www.findmypast.com/\">Findmypast</a> as advocates for DevOps principles and practices, and the vehicle through which those practices can be implemented day-to-day. Spanners operate as an autonomous team, but our efforts centre around providing feature teams with the processes and tools they need to reap the rewards of following a DevOps approach when developing and maintaining services.</p>\n\n<div align=\"center\">\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/atlassian-devops.png\" width=\"900\" />\n</div>\n<div align=\"center\">\n  <p>Source: <a href=\"https://www.atlassian.com/devops/what-is-devops\">Atlassian</a></p>\n</div>\n\n<p><strong>Team Goals</strong></p>\n\n<p>Our goals always trace back to wider organisation goals that in turn align with the expected company and department behaviours. For Spanners our quarterly team goals generally focus on how we improve five key areas in terms of software delivery across the engineering teams:</p>\n\n<ul>\n  <li><strong>Speed of Deployment</strong> \u2013 The rate of code deployments and the speed with which code can be built, tested and deployed to our environments.</li>\n  <li><strong>Collaboration</strong> \u2013 Enable teams to investigate issues and monitor services and systems using a well-defined and trusted series of tools. Providing a framework for teams to take Ownership of the service pipelines (sometimes described as \u201cYou build it, you run it\u201d).</li>\n  <li><strong>Quality</strong> \u2013 Enable teams to continually improve upon their service/s through automation in the form of CI/CD pipelines, and quickly identify issues and shortcomings in those implementations.</li>\n  <li><strong>Reliability</strong> \u2013 Reduce variables when it comes to the building, testing and deployment of code changes, and provide near real-time feedback (measurement) of the effectiveness of those code changes.</li>\n  <li><strong>Security</strong> \u2013 We strive to manage everything as code and provide the tools and means for all engineers to do their jobs with minimal friction, building security and accountability into everything we deliver.</li>\n</ul>\n\n<p><strong>The Team</strong></p>\n\n<p>The Spanners team comprises eight engineers, supporting a wider engineering cohort of roughly 120 engineers and management.  Backgrounds within the team vary, some members having more of an operations background, whilst others have more of a development background.  The Spanners team is truly multi-disciplinary, with a variety of skill levels ranging from senior to junior, and a variety of specialisms within the team.  This breadth of knowledge enables Spanners to provide a one-stop-shop for support of the product build pipelines and underpinning technologies.</p>\n\n<p>Spanners operate like any other feature team within the wider engineering group.  We follow an agile methodology built around a fortnightly sprint cycle, and follow a regular cadence of planning, refining and retrospective meetings.</p>\n\n<p>To ensure queries from the wider engineering group are answered in good time, we operate a support rota, whereby a team member is assigned as an initial point-of-contact for queries.  This ensures that the team is always on hand to collaborate with a feature team on a request or an incident.</p>\n\n<p><strong>The Challenge</strong></p>\n\n<p>One underappreciated aspect of software development is the need to integrate new team members into the engineering cohort.  Without a smooth on-boarding process both the new and existing team members can become bogged down in the configuration of systems, tools and certificates. Ultimately, this results in a negative impact to the speed of deployment, reliability and security key areas that we as a team are constantly striving to improve.</p>\n\n<div align=\"center\">\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/aboard.webp\" width=\"900\" />\n</div>\n\n<p><strong>The Solution</strong></p>\n\n<p>From our initial investigations we identified that all systems that teams were interfacing with during the on/off-boarding process could be interacted with using RESTful APIs, so the obvious solution was to wrap these interactions in a higher-level API provided by a single service.</p>\n\n<div align=\"center\">\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/victorops-logo.png\" width=\"200\" />\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/github-logo.png\" width=\"200\" />\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/docker-icon.png\" width=\"200\" />\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/node-js.svg\" width=\"200\" />\n</div>\n<div align=\"center\">\n  <p><em>A sample of the systems and tools we configure for new starters</em></p>\n</div>\n\n<p>The catalyst for prioritising the development of the service was a rapid growth in the engineering team cohort, which included new engineers joining the Spanners team.  This meant that we began to see first-hand the shortcomings in the existing processes, the pressure this placed upon feature teams, and the detrimental effects for new starters.</p>\n\n<p>Working in sprint cycles meant we had allocated time to define, refine and plan for tickets that would deliver upon the prescribed solution to reduce friction for the on-boarding and off-boarding processes.  Quickly <a href=\"https://asana.com/resources/t-shirt-sizing\">T-shirt sizing</a> the initial tickets we could see this would be more than just a trivial task, and as such we defined an Epic, and made it our quarterly goal.</p>\n\n<p>We started by engaging stakeholders responsible for the on/off-boarding processes, and development got underway at the beginning of the next quarter.  Within four weeks we had our minimal viable product (MVP) ready for demonstration to stakeholders.</p>\n\n<div align=\"center\">\n<img src=\"https://tech.findmypast.com/images/2023-08-22-how-spanners-implement-devops/staff-swagger.png\" width=\"900\" />\n</div>\n<div align=\"center\">\n  <p><em>Service Swagger Interface</em></p>\n</div>\n\n<p>Scaffolding up the service, repository and build pipeline was very straightforward thanks to a pre-existing service developed by Spanners.  This service bootstraps a microservice from nothing but a name to a fully deployable project, interfacing with Github and Teamcity (our CI/CD solution) to define a repository, populate it with templates and define a build pipeline.  This scaffolding service is another example of how Spanners have applied DevOps principles and practices to find a solution to a business problem.</p>\n\n<p>The on/off-boarding MVP configured access to several of our systems (Jira, VictorOps, Launch Darkly, Github and Teamcity), as well as configured the user\u2019s device, installing applications and CLI tools (VS Code, NPM, docker etc.) required for them to do their job on either Linux, Mac or Windows OS.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>installHelm<span class=\"o\">()</span> <span class=\"o\">{</span> \n<span class=\"nb\">cd</span> /tmp \n<span class=\"c\"># Check for installed version of Helm </span>\n<span class=\"nv\">CUR_HELM_VER</span><span class=\"o\">=</span><span class=\"sb\">`</span>/usr/local/bin/helm version 2&gt; /dev/null | <span class=\"nb\">grep</span> <span class=\"s2\">\"Version:\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span> <span class=\"s2\">\",\"</span> <span class=\"nt\">-f</span> 1 | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span> <span class=\"s2\">\":\"</span> <span class=\"nt\">-f</span> 2 | <span class=\"nb\">sed</span> <span class=\"s1\">'s/\"//g'</span><span class=\"sb\">`</span> \n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$CUR_HELM_VER</span> <span class=\"o\">==</span> <span class=\"nv\">$HELM_VER</span> <span class=\"o\">]]</span> \n<span class=\"k\">then \n</span>log <span class=\"s2\">\"Helm already installed, and at the correct version.\"</span> \n<span class=\"k\">else \n</span>log <span class=\"s2\">\"Installing helm: </span><span class=\"k\">${</span><span class=\"nv\">HELM_VER</span><span class=\"k\">}</span><span class=\"s2\">\"</span> \ncurl <span class=\"nt\">-LO</span> https://get.helm.sh/helm-<span class=\"k\">${</span><span class=\"nv\">HELM_VER</span><span class=\"k\">}</span><span class=\"nt\">-linux-amd64</span>.tar.gz \n<span class=\"nb\">tar</span> <span class=\"nt\">-zxf</span> helm-<span class=\"k\">${</span><span class=\"nv\">HELM_VER</span><span class=\"k\">}</span><span class=\"nt\">-linux-amd64</span>.tar.gz \n\n<span class=\"c\"># Install Helm executable  </span>\n<span class=\"nb\">sudo mv</span> ./linux-amd64/helm /usr/local/bin \nlog <span class=\"s2\">\"Helm successfully installed to version </span><span class=\"k\">${</span><span class=\"nv\">HELM_VER</span><span class=\"k\">}</span><span class=\"s2\">.\"</span> \n<span class=\"k\">fi</span> \n<span class=\"o\">}</span> \n</code></pre></div></div>\n\n<p><em>Extract of our Linux (Ubuntu) setup script</em></p>\n\n<p>It also fulfilled the off-boarding requirement, enabling administrators to clean-up user accounts when an engineer left the company.</p>\n\n<p>In a commitment to \u201c<a href=\"https://www.dynatrace.com/news/blog/what-is-shift-left-and-what-is-shift-right/#what-does-shift-left-mean-in-devops\">shift left</a>\u201d, most of the service codebase was developed with unit and integration tests from the very start. Unit tests are run using the <a href=\"https://jestjs.io/\">jest</a> framework, and triggered locally on a pre-push hook, whilst integration tests are run on each and every build.  All build pipeline configuration to run tests is pre-configured in our build pipelines, and all of it bootstrapped by our scaffolding service.</p>\n\n<p>As the services need to interface with systems (both internal and external) at an administrative level securing the credentials to interface with these systems is of course required.  This was not much of an issue to implement though, as we already operate an on-premise <a href=\"https://www.vaultproject.io/\">Vault cluster</a> and our scaffolded build pipelines have pre-defined secure methods to interact with this Vault instance.</p>\n\n<p>Spanners regularly deliver workshop sessions to the Engineering cohort in which we take a deep dive in to recent or upcoming changes to processes and technology.  Following completion of the MVP we delivered one such workshop session regarding the new service.  The feedback gathered resulted in several tickets being defined, and as they were executed incremental improvements were made to the scripts and endpoints of the service.   Due to changes being applied directly to the trunk branch, and test automation in the build pipeline, each change could be verified by stakeholders, and benefits realised immediately.</p>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span><span class=\"p\">.</span><span class=\"nx\">createAccount</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">({</span> <span class=\"nx\">username</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">callApi</span><span class=\"p\">(</span>\n    <span class=\"s2\">`members`</span><span class=\"p\">,</span>\n    <span class=\"dl\">'</span><span class=\"s1\">POST</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">([</span>\n      <span class=\"p\">{</span>\n        <span class=\"na\">email</span><span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">username</span><span class=\"p\">}${</span><span class=\"nx\">fmpEmail</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">,</span>\n        <span class=\"na\">role</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">writer</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">])</span>\n  <span class=\"p\">);</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">201</span><span class=\"p\">].</span><span class=\"nx\">includes</span><span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">status</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">error</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">text</span><span class=\"p\">();</span>\n    <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nx\">StaffAPIError</span><span class=\"p\">({</span>\n      <span class=\"na\">message</span><span class=\"p\">:</span> <span class=\"s2\">`Failed to setup new joiner </span><span class=\"p\">${</span><span class=\"nx\">username</span><span class=\"p\">}</span><span class=\"s2\"> with access to Launch Darkly`</span><span class=\"p\">,</span>\n      <span class=\"nx\">error</span><span class=\"p\">,</span>\n      <span class=\"na\">statusCode</span><span class=\"p\">:</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">status</span><span class=\"p\">,</span>\n    <span class=\"p\">});</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"nx\">logger</span><span class=\"p\">.</span><span class=\"nx\">info</span><span class=\"p\">(</span><span class=\"s2\">`A Launch Darkly account for new joiner </span><span class=\"p\">${</span><span class=\"nx\">username</span><span class=\"p\">}</span><span class=\"s2\"> has been made successfully!`</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div></div>\n<p><em>Example on-boarding API call</em></p>\n\n<p>The service was shortly thereafter demonstrated to the wider engineering team, and flagged as the replacement to previous on/off-boarding procedures. Documentation throughout our codebase was updated to signpost the new service as the one-stop-shop for on/off-boarding staff.</p>\n\n<p>Migration to use of the script was very smooth, due to the engineering cohort now being able to self-serve on/off-boarding requests.</p>\n\n<p><strong>What are Spanners working on now?</strong></p>\n\n<p>Working on the service opened the teams eyes to security loopholes and blind spots within our environment, which put us on the path to improving the role based access controls (RBAC) provided to the engineering cohort. We are in the process of improving security within our network by implementing RBAC for engineer access to servers (via SSH &amp; RDP) and Kubernetes resources.</p>\n\n<p><strong>Conclusion</strong></p>\n\n<p>I hope the above has given you an idea of how Spanners implement DevOps principles within the wider Engineering cohort at Findmypast. The values held by the company and the behaviours expected from staff, lay a great foundation for the adoption of DevOps practices by the entire Engineering cohort.  Behavioural expectations at the organisational level such as \u201cWe use data to fail fast and learn how to do it differently next time\u201d, and \u201cWe share our knowledge to empower the people around us\u201d, really resonate with the DevOps principles of continuous improvement and collaboration respectively.  In practice these principles mean that new engineers very easily adopt DevOps practices. Yielding improved outcomes for both the individual and the business, with teams acting autonomously to experiment and deliver product enhancements at a rapid pace.</p>\n\n<p>We may be looking for engineers to join our team. If you\u2019re interested <a href=\"https://www.findmypast.co.uk/help/contact\">contact us</a>, or check out our <a href=\"https://findmypast.pinpointhq.com/\">current vacancies</a>.</p>"
    },
    "published": "Mon, 21 Aug 2023 17:30:00 +0000",
    "published_parsed": [
      2023,
      8,
      21,
      17,
      30,
      0,
      0,
      233,
      0
    ],
    "links": [
      {
        "rel": "alternate",
        "type": "text/html",
        "href": "https://tech.findmypast.com/how-spanners-implement-devops/"
      }
    ],
    "link": "https://tech.findmypast.com/how-spanners-implement-devops/",
    "id": "https://tech.findmypast.com/how-spanners-implement-devops/",
    "guidislink": false,
    "tags": [
      {
        "term": "engineering",
        "scheme": null,
        "label": null
      }
    ]
  }
}