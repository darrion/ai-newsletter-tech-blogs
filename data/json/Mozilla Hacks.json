{
  "company": "Mozilla Hacks",
  "title": "Mozilla Hacks",
  "xmlUrl": "https://hacks.mozilla.org/feed/",
  "htmlUrl": "https://hacks.mozilla.org/",
  "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPuppeteer Support for the Cross-Browser WebDriver BiDi Standard - Mozilla Hacks - the Web developer blog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHacks\n\n\n\n\n\n\n\n\n\n\nHacks on YouTube\n@mozhacks on Twitter\nHacks RSS Feed\nDownload Firefox\n\n\n\n\nPuppeteer Support for the Cross-Browser WebDriver BiDi Standard\n\n\n        By\n                                        James Graham \n\n      Posted on\n      \n        December 12, 2023      \nin\n        Developer Tools, Featured Article,  and Firefox \n\n\n\n\n\n\nWe are pleased to share that Puppeteer now supports the next-generation, cross-browser WebDriver BiDi standard. This new protocol makes it easy for web developers to write automated tests that work across multiple browser engines.\nHow Do I Use Puppeteer With Firefox?\nThe WebDriver BiDi protocol is supported starting with Puppeteer v21.6.0. When calling puppeteer.launch pass in \"firefox\" as the product option, and \"webDriverBiDi\" as the protocol option:\nconst browser = await puppeteer.launch({\r\n\u00a0\u00a0product: 'firefox',\r\n\u00a0\u00a0protocol: 'webDriverBiDi',\r\n})\nYou can also use the \"webDriverBiDi\" protocol when testing in Chrome, reflecting the fact that WebDriver BiDi offers a single standard for modern cross-browser automation.\nIn the future we expect \"webDriverBiDi\" to become the default protocol when using Firefox in Puppeteer.\nDoesn\u2019t Puppeteer Already Support Firefox?\nPuppeteer has had experimental support for Firefox based on a partial re-implementation of the proprietary Chrome DevTools Protocol (CDP). This approach had the advantage that it worked without significant changes to the existing Puppeteer code. However the CDP implementation in Firefox is incomplete and has significant technical limitations. In addition, the CDP protocol itself is not designed to be cross browser, and undergoes frequent breaking changes, making it unsuitable as a long-term solution for cross-browser automation.\nTo overcome these problems, we\u2019ve worked with the WebDriver Working Group at the W3C to create a standard automation protocol that meets the needs of modern browser automation clients: this is WebDriver BiDi. For more details on the protocol design and how it compares to the classic HTTP-based WebDriver protocol, see our earlier posts.\nAs the standardization process has progressed, the Puppeteer team has added a WebDriver BiDi backend in Puppeteer, and provided feedback on the specification to ensure that it meets the needs of Puppeteer users, and that the protocol design enables existing CDP-based tooling to easily transition to WebDriver BiDi. The result is a single protocol based on open standards that can drive both Chrome and Firefox in Puppeteer.\nAre All Puppeteer Features Supported?\nNot yet; WebDriver BiDi is still a work in progress, and doesn\u2019t yet cover the full feature set of Puppeteer.\nCompared to the Chrome+CDP implementation, there are some feature gaps, including support for accessing the cookie store, network request interception, some emulation features, and permissions. These features are actively being standardized and will be integrated as soon as they become available. For Firefox, the only missing feature compared to the Firefox+CDP implementation is cookie access. In addition, WebDriver BiDi already offers improvements, including better support for multi-process Firefox, which is essential for testing some websites. More information on the complete set of supported APIs can be found in the Puppeteer documentation, and as new WebDriver-BiDi features are enabled in Gecko we\u2019ll publish details on the Firefox Developer Experience blog.\nNevertheless, we believe that the WebDriver-based Firefox support in Puppeteer has reached a level of quality which makes it suitable for many real automation scenarios. For example at Mozilla we have successfully ported our Puppeteer tests for pdf.js from Firefox+CDP to Firefox+WebDriver BiDi.\nIs Firefox\u2019s CDP Support Going Away?\nWe currently don\u2019t have a specific timeline for removing CDP support. However, maintaining multiple protocols is not a good use of our resources, and we expect WebDriver BiDi to be the future of remote automation in Firefox. If you are using the CDP support outside of the context of Puppeteer, we\u2019d love to hear from you (see below), so that we can understand your use cases, and help transition to WebDriver BiDi.\nWhere Can I Provide Feedback?\nFor any issues you experience when porting Puppeteer tests to BiDi, please open issues in the Puppeteer issue tracker, unless you can verify the bug is in the Firefox implementation, in which case please file a bug on Bugzilla.\nIf you are currently using CDP with Firefox, please join the #webdriver matrix channel so that we can discuss your use case and requirements, and help you solve any problems you encounter porting your code to WebDriver BiDi.\nUpdate: The Puppeteer team have published \u201cHarness the Power of WebDriver BiDi: Chrome and Firefox Automation with Puppeteer\u201c.\n\nAbout\n                          \n                James Graham              \n\nSoftware engineer focused on maintaining a healthy open web. Web-platform-tests core team member.\nhttps://hoppipolla.co.uk More articles by James Graham\u2026\n\n\n\n\nDiscover great resources for web development\nSign up for the Mozilla Developer Newsletter:\n\n\n\n\nE-mail\n\n\n\n\n\n      I'm okay with Mozilla handling my info as explained in this Privacy Policy.\n    \n\nSign up now\n\n\nThanks! Please check your inbox to confirm your subscription.\nIf you haven\u2019t previously confirmed a subscription to a Mozilla-related newsletter you may have to do so. Please check your inbox or your spam filter for an email from us.\n  \n\n\n\n\n\n\n          Except where otherwise noted, content on this site is licensed\n          under the\n          Creative Commons Attribution Share-Alike License v3.0\n          or any later version.\n        \n\n\n\n\n\n\n\n\n\n\n\n\n",
  "latestPost": {
    "title": "Puppeteer Support for the Cross-Browser WebDriver BiDi Standard",
    "title_detail": {
      "type": "text/plain",
      "language": null,
      "base": "https://hacks.mozilla.org/feed/",
      "value": "Puppeteer Support for the Cross-Browser WebDriver BiDi Standard"
    },
    "links": [
      {
        "rel": "alternate",
        "type": "text/html",
        "href": "https://hacks.mozilla.org/2023/12/puppeteer-webdriver-bidi/"
      }
    ],
    "link": "https://hacks.mozilla.org/2023/12/puppeteer-webdriver-bidi/",
    "authors": [
      {
        "name": "James Graham"
      }
    ],
    "author": "James Graham",
    "author_detail": {
      "name": "James Graham"
    },
    "published": "Tue, 12 Dec 2023 16:14:03 +0000",
    "published_parsed": [
      2023,
      12,
      12,
      16,
      14,
      3,
      1,
      346,
      0
    ],
    "tags": [
      {
        "term": "Developer Tools",
        "scheme": null,
        "label": null
      },
      {
        "term": "Featured Article",
        "scheme": null,
        "label": null
      },
      {
        "term": "Firefox",
        "scheme": null,
        "label": null
      },
      {
        "term": "firefox",
        "scheme": null,
        "label": null
      },
      {
        "term": "Standards",
        "scheme": null,
        "label": null
      },
      {
        "term": "Testing",
        "scheme": null,
        "label": null
      },
      {
        "term": "Tools",
        "scheme": null,
        "label": null
      },
      {
        "term": "webDriver",
        "scheme": null,
        "label": null
      }
    ],
    "id": "https://hacks.mozilla.org/?p=48070",
    "guidislink": false,
    "summary": "<p>Puppeteer now supports the next-generation, cross-browser WebDriver BiDi standard. This new protocol makes it easy for web developers to write automated tests that work across multiple browser engines.</p>\n<p>The post <a href=\"https://hacks.mozilla.org/2023/12/puppeteer-webdriver-bidi/\">Puppeteer Support for the Cross-Browser WebDriver BiDi Standard</a> appeared first on <a href=\"https://hacks.mozilla.org\">Mozilla Hacks - the Web developer blog</a>.</p>",
    "summary_detail": {
      "type": "text/html",
      "language": null,
      "base": "https://hacks.mozilla.org/feed/",
      "value": "<p>Puppeteer now supports the next-generation, cross-browser WebDriver BiDi standard. This new protocol makes it easy for web developers to write automated tests that work across multiple browser engines.</p>\n<p>The post <a href=\"https://hacks.mozilla.org/2023/12/puppeteer-webdriver-bidi/\">Puppeteer Support for the Cross-Browser WebDriver BiDi Standard</a> appeared first on <a href=\"https://hacks.mozilla.org\">Mozilla Hacks - the Web developer blog</a>.</p>"
    },
    "content": [
      {
        "type": "text/html",
        "language": null,
        "base": "https://hacks.mozilla.org/feed/",
        "value": "<p>We are pleased to share that <a href=\"https://pptr.dev/\">Puppeteer</a> now supports the next-generation, cross-browser <a href=\"https://w3c.github.io/webdriver-bidi/\">WebDriver BiDi standard</a>. This new protocol makes it easy for web developers to write automated tests that work across multiple browser engines.</p>\n<h2>How Do I Use Puppeteer With Firefox?</h2>\n<p>The WebDriver BiDi protocol is supported starting with <a href=\"https://pptr.dev/webdriver-bidi\">Puppeteer v21.6.0</a>. When calling <code>puppeteer.launch</code> pass in <code>\"firefox\"</code> as the product option, and <code>\"webDriverBiDi\"</code> as the protocol option:</p>\n<pre><code class=\"hljs javascript\">const browser = await puppeteer.launch({\n\u00a0\u00a0product: 'firefox',\n\u00a0\u00a0protocol: 'webDriverBiDi',\n})</code></pre>\n<p>You can also use the <code>\"webDriverBiDi\"</code> protocol when testing in Chrome, reflecting the fact that WebDriver BiDi offers a single standard for modern cross-browser automation.</p>\n<p>In the future we expect <code>\"webDriverBiDi\"</code> to become the default protocol when using Firefox in Puppeteer.</p>\n<h2>Doesn&#8217;t Puppeteer Already Support Firefox?</h2>\n<p>Puppeteer has had experimental support for Firefox based on a partial re-implementation of the proprietary <a href=\"https://chromedevtools.github.io/devtools-protocol/\">Chrome DevTools Protocol</a> (CDP). This approach had the advantage that it worked without significant changes to the existing Puppeteer code. However the CDP implementation in Firefox is incomplete and has significant technical limitations. In addition, the CDP protocol itself is not designed to be cross browser, and undergoes frequent breaking changes, making it unsuitable as a long-term solution for cross-browser automation.</p>\n<p>To overcome these problems, we&#8217;ve worked with the WebDriver Working Group at the W3C to create a standard automation protocol that meets the needs of modern browser automation clients: this is WebDriver BiDi. For more details on the protocol design and how it compares to the classic HTTP-based WebDriver protocol, see our <a href=\"https://hacks.mozilla.org/2020/12/cross-browser-testing-part-1-web-app-testing-today/\">earlier</a> <a href=\"https://hacks.mozilla.org/2021/01/improving-cross-browser-testing-part-2-new-automation-features-in-firefox-nightly/\">posts</a>.</p>\n<p>As the standardization process has progressed, the Puppeteer team has added a WebDriver BiDi backend in Puppeteer, and provided feedback on the specification to ensure that it meets the needs of Puppeteer users, and that the protocol design enables existing CDP-based tooling to easily transition to WebDriver BiDi. The result is a single protocol based on open standards that can drive both Chrome and Firefox in Puppeteer.</p>\n<h2>Are All Puppeteer Features Supported?</h2>\n<p>Not <a href=\"https://puppeteer.github.io/ispuppeteerwebdriverbidiready/\">yet</a>; WebDriver BiDi is still a work in progress, and doesn&#8217;t yet cover the full feature set of Puppeteer.</p>\n<p>Compared to the Chrome+CDP implementation, there are some feature gaps, including support for accessing the cookie store, network request interception, some emulation features, and permissions. These features are actively being standardized and will be integrated as soon as they become available. For Firefox, the only missing feature compared to the Firefox+CDP implementation is cookie access. In addition, WebDriver BiDi already offers improvements, including better support for multi-process Firefox, which is essential for testing some websites. More information on the complete set of supported APIs can be found in the <a href=\"https://pptr.dev/webdriver-bidi\">Puppeteer documentation</a>, and as new WebDriver-BiDi features are enabled in Gecko we&#8217;ll publish details on the <a href=\"https://fxdx.dev/\">Firefox Developer Experience blog</a>.</p>\n<p>Nevertheless, we believe that the WebDriver-based Firefox support in Puppeteer has reached a level of quality which makes it suitable for many real automation scenarios. For example at Mozilla we have successfully <a href=\"https://github.com/mozilla/pdf.js/pull/17172\">ported</a> our Puppeteer tests for <a href=\"https://mozilla.github.io/pdf.js/\">pdf.js</a> from Firefox+CDP to Firefox+WebDriver BiDi.</p>\n<h2>Is Firefox&#8217;s CDP Support Going Away?</h2>\n<p>We currently don&#8217;t have a specific timeline for removing CDP support. However, maintaining multiple protocols is not a good use of our resources, and we expect WebDriver BiDi to be the future of remote automation in Firefox. If you are using the CDP support outside of the context of Puppeteer, we&#8217;d love to hear from you (see below), so that we can understand your use cases, and help transition to WebDriver BiDi.</p>\n<h2>Where Can I Provide Feedback?</h2>\n<p>For any issues you experience when porting Puppeteer tests to BiDi, please open issues in the <a href=\"https://github.com/puppeteer/puppeteer/issues/new/choose\">Puppeteer issue tracker</a>, unless you can verify the bug is in the Firefox implementation, in which case please <a href=\"https://bugzilla.mozilla.org/enter_bug.cgi?product=Remote%20Protocol&amp;component=WebDriver%20BiDi\">file a bug on Bugzilla</a>.</p>\n<p>If you are currently using CDP with Firefox, please join the <a href=\"https://matrix.to/#/#webdriver:mozilla.org\">#webdriver matrix channel</a> so that we can discuss your use case and requirements, and help you solve any problems you encounter porting your code to WebDriver BiDi.</p>\n<p><strong>Update</strong>: The Puppeteer team have published &#8220;<a href=\"https://developer.chrome.com/blog/puppeteer-webdriver-bidi-2023\">Harness the Power of WebDriver BiDi: Chrome and Firefox Automation with Puppeteer</a>&#8220;.</p>\n<p>The post <a href=\"https://hacks.mozilla.org/2023/12/puppeteer-webdriver-bidi/\">Puppeteer Support for the Cross-Browser WebDriver BiDi Standard</a> appeared first on <a href=\"https://hacks.mozilla.org\">Mozilla Hacks - the Web developer blog</a>.</p>"
      }
    ]
  }
}