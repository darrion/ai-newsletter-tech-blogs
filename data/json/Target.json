{
  "company": "Target",
  "title": "Target",
  "xmlUrl": "https://target.github.io/feed.xml",
  "htmlUrl": "https://target.github.io/",
  "content": "\n\n\n\nREDstack \u2013 target tech\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMENU\n\n\nHome\n\n\nTags\n\n\nCategories\n\n\nCode With Target\n\n Feed\n\n\n\n\n\n\n\n\n\n\n                target tech\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nREDstack\nHadoop Clusters as a Service\n\n07 Dec 2017\n                            in Big data infrastructure\u00a0\u00a06 minutes read\n\n\n\nREDstack is Now Open Source!\nWe are officially open sourcing REDstack, our sandbox tool for Big Data development at Target.\nWhat is REDstack?\nREDstack is a tool for provisioning kerberized clusters on OpenStack.  We created it with four goals in mind:\n\nProvide a secured environment, with the ability to leverage preconfigured LDAP and Kerberos servers.\nOut of the box usability, allowing you to log in with preconfigured user accounts.\nCustom user management utilities to administer the cluster.\nProvide a fully customizable experience, everything is a configuration option in your build files:\n    \nCluster size, node sizes, types of nodes and node roles,\nHadoop configurations, heap sizes, and components,\nAll users, passwords, and secure assets.\n\n\n\nComponents\nREDstack is made up of two major components:\n\nhdp-cloud - The cookbook\n    \nThe cookbook is used by the application itself to install components and lay down cluster configuration.\nThe cookbook can be used independently of REDstack to manually provision a cluster.\n\n\nREDstack - The orchestration component\n    \nREDstack is a python application that performs all of the high-level complexities and timings associated with a full Hadoop installation:\n        \nOrchestrates the provisioning of resources over OpenStack APIs,\nControls and monitors parallel Chef deployment across the cluster,\nManages and monitors cluster component install over HTTPS requests.\n\n\n\nREDstack is bundled with a Docker image, where the configs are set up locally before an installation, and all of the dependencies are updated and configured.\n\n\nHow to Get Started\nHead over to the repository at https://github.com/target/redstack and follow along. The repo has instructions on how to build and configure the clusters using the included Docker image.\nHistory of the Project\nTarget\u2019s Big Data Platform Team manages multiple Big Data environments, with hundreds of nodes and many PB\u2019s of data.  As mentioned in our prior blog posts, we depend heavily on Chef as a core part of our CI/CD pipeline.  During our testing a couple of years ago, we identified a large opportunity to provide a way to do full integration testing with our Chef cookbooks. This opportunity opened the door for a new product.\nOrigins\nEarly on, we released a product internally called Pushbutton. This was a three-node cluster that ran on a standard issue laptop at Target. It was kerberized, and it worked well as a Sandbox environment for developers because it had the same security setup. PushButton, however, did not use the same cookbooks as the main cluster. We wanted something that could do what PushButton did, but with our real cookbooks in a larger environment. By creating a full cluster from scratch, we would be able to understand exactly how the cookbooks would function when applied to new nodes and make sure the cookbooks were in a constant working state. We also needed a little bit larger of a sandbox, otherwise we would have difficulty testing high availability (HA) components, or those that run across multiple nodes, like Apache Zookeeper.\nToward REDStack\nOur early exploration started out by trying to adapt the existing PushButton work onto OpenStack. We used shell scripts to automate creation of instances, Knife to bootstrap the nodes with the Chef recipes, and cURL requests to automate and monitor the install process. We got it working, but we still had to face our biggest challenge yet, integrating the cookbooks meant for physical hardware onto virtualized nodes. They were expecting particular configurations such as physical drive formatting and partitioning, or where master services are already defined and running. Instead, we had to get them working with our minimum 1x50GB virtual volumes, and anything we changed would have to still be working on the physical nodes. After some difficult work, and with some clever tricks with attributes and Chef injection, we were able to preconfigure the nodes to be recognized by the recipes and were able to slowly commit our changes back to the ecosystem without impact on the main cluster\u2019s health.\nA Product is Born\nBy this point, we had written the entire process as a Python application and set it up on a nightly loop. Every night, it would build an entire Hadoop cluster, from scratch, smoke test it, and report the results to the team. And it worked! Word started to spread among the organization and we were suddenly getting requests from users of our production cluster. They wanted to use REDstack to spin up a sandbox for them to use for Hadoop. Not only would it be more powerful, and sharable by multiple people on a team, it would look exactly like our production cluster because it uses all of the same configurations and assets.\nOpportunity!\nAs a data engineer, wouldn\u2019t it be nice if I could have a kerberized sandbox environment that looked similar to a production cluster, was easy to work with and user friendly? This is what was possible with these environments, so we started to try and provide them to teams. It didn\u2019t work very well initially, users cloned the repo and ran it on their laptops and ran into all sorts of issues with dependencies and versions with Chef versions, ruby versions, gem versions, and python versions. There were simply too many dependencies to manage on on different environments, even with existing dependency management tools. We needed a way to hide all of the complexity and eliminate the need for users run anything on their computer.\nThe Full-Stack Service\nThis led us to the development of our full-stack cluster delivery service, Stacker. Stacker is an API running on top of a database, orchestrating REDstack deploys in threads and listening for requests over a front-end web page. Users simply submit a request on the website and a cluster will be delivered to them in about an hour. At this time, there have been more than 500 unique cluster requests and at least 30 teams are actively using REDstack as a part of their development process.\nOngoing Development\nOver time, REDstack has evolved to include multiple types of Big Data clusters. We now provide Elasticsearch clusters as well as Druid in addition to the original Hadoop clusters. Our service continues to evolve with new releases and versions of the software, and additional ease-of-user work on our build in functions for user management and cluster administration.\nAbout the Author\nEric Krenz is a Senior Data Engineer on the Big Data Platform Team at Target.\n\n\n\u00a0Tagged with hadoop\u00a0\u2022\u00a0big data\u00a0\u2022\u00a0elasticsearch\u00a0\u2022\u00a0druid\u00a0\u2022\u00a0cloud\u00a0\u2022\u00a0chef\u00a0\u2022\u00a0openstack\u00a0\u2022\u00a0python\n\n\n\n\n\n\n        Share this post\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBY Eric Krenz\nOF Target Brands, Inc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTarget Brands, Inc \u00a9 2019 \u2022 All rights reserved.\n            \n\n\n\u00a0\u2022\n                \n            \n\nTags\u00a0\u2022\n                \n            \n\nCategories\u00a0\u2022\n                \n            \n\nCode With Target\u00a0\u2022\n                \n            \n Feed\n\n\n\n\n\n\n\n\n\n\n\n\n/* Redirect */\n\n\n/* Original */\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "latestPost": {
    "title": "REDstack",
    "title_detail": {
      "type": "text/html",
      "language": "en",
      "base": "https://target.github.io/feed.xml",
      "value": "REDstack"
    },
    "links": [
      {
        "rel": "alternate",
        "type": "text/html",
        "href": "https://target.github.io/big%20data%20infrastructure/REDstack-Hadoop-as-a-Service"
      }
    ],
    "link": "https://target.github.io/big%20data%20infrastructure/REDstack-Hadoop-as-a-Service",
    "id": "https://target.github.io/big%20data%20infrastructure/REDstack-Hadoop-as-a-Service",
    "guidislink": false,
    "updated": "2017-12-07T00:00:00-00:00",
    "updated_parsed": [
      2017,
      12,
      7,
      0,
      0,
      0,
      3,
      341,
      0
    ],
    "published": "2017-12-07T00:00:00-06:00",
    "published_parsed": [
      2017,
      12,
      7,
      6,
      0,
      0,
      3,
      341,
      0
    ],
    "authors": [
      {
        "name": "Target Brands, Inc",
        "href": "https://target.github.io",
        "email": ""
      }
    ],
    "author_detail": {
      "name": "Target Brands, Inc",
      "href": "https://target.github.io",
      "email": ""
    },
    "href": "https://target.github.io",
    "author": "Target Brands, Inc",
    "content": [
      {
        "type": "text/html",
        "language": "en",
        "base": "https://target.github.io/feed.xml",
        "value": "<h2 id=\"redstack-is-now-open-source\">REDstack is Now Open Source!</h2>\n<p>We are officially open sourcing REDstack, our sandbox tool for Big Data development at Target.</p>\n\n<h3 id=\"what-is-redstack\">What is REDstack?</h3>\n<p>REDstack is a tool for provisioning kerberized clusters on OpenStack.  We created it with four goals in mind:</p>\n\n<ul>\n  <li>Provide a secured environment, with the ability to leverage preconfigured LDAP and Kerberos servers.</li>\n  <li>Out of the box usability, allowing you to log in with preconfigured user accounts.</li>\n  <li>Custom user management utilities to administer the cluster.</li>\n  <li>Provide a fully customizable experience, everything is a configuration option in your build files:\n    <ul>\n      <li>Cluster size, node sizes, types of nodes and node roles,</li>\n      <li>Hadoop configurations, heap sizes, and components,</li>\n      <li>All users, passwords, and secure assets.</li>\n    </ul>\n  </li>\n</ul>\n\n<h3 id=\"components\">Components</h3>\n<p>REDstack is made up of two major components:</p>\n\n<ol>\n  <li><a href=\"https://supermarket.chef.io/cookbooks/hdp-cloud\">hdp-cloud</a> - The cookbook\n    <ul>\n      <li>The cookbook is used by the application itself to install components and lay down cluster configuration.</li>\n      <li>The cookbook can be used independently of REDstack to manually provision a cluster.</li>\n    </ul>\n  </li>\n  <li><a href=\"https://github.com/target/redstack\">REDstack</a> - The orchestration component\n    <ul>\n      <li>REDstack is a python application that performs all of the high-level complexities and timings associated with a full Hadoop installation:\n        <ul>\n          <li>Orchestrates the provisioning of resources over OpenStack APIs,</li>\n          <li>Controls and monitors parallel Chef deployment across the cluster,</li>\n          <li>Manages and monitors cluster component install over HTTPS requests.</li>\n        </ul>\n      </li>\n    </ul>\n\n    <p>REDstack is bundled with a Docker image, where the configs are set up locally before an installation, and all of the dependencies are updated and configured.</p>\n  </li>\n</ol>\n\n<h3 id=\"how-to-get-started\">How to Get Started</h3>\n<p>Head over to the repository at https://github.com/target/redstack and follow along. The repo has instructions on how to build and configure the clusters using the included Docker image.</p>\n\n<h2 id=\"history-of-the-project\">History of the Project</h2>\n<p>Target\u2019s Big Data Platform Team manages multiple Big Data environments, with hundreds of nodes and many PB\u2019s of data.  As mentioned in our prior blog posts, we depend heavily on Chef as a core part of our CI/CD pipeline.  During our testing a couple of years ago, we identified a large opportunity to provide a way to do full integration testing with our Chef cookbooks. This opportunity opened the door for a new product.</p>\n\n<h3 id=\"origins\">Origins</h3>\n<p>Early on, we released a product internally called Pushbutton. This was a three-node cluster that ran on a standard issue laptop at Target. It was kerberized, and it worked well as a Sandbox environment for developers because it had the same security setup. PushButton, however, did not use the same cookbooks as the main cluster. We wanted something that could do what PushButton did, but with our real cookbooks in a larger environment. By creating a full cluster from scratch, we would be able to understand exactly how the cookbooks would function when applied to new nodes and make sure the cookbooks were in a constant working state. We also needed a little bit larger of a sandbox, otherwise we would have difficulty testing high availability (HA) components, or those that run across multiple nodes, like Apache Zookeeper.</p>\n\n<h3 id=\"toward-redstack\">Toward REDStack</h3>\n<p>Our early exploration started out by trying to adapt the existing PushButton work onto OpenStack. We used shell scripts to automate creation of instances, Knife to bootstrap the nodes with the Chef recipes, and cURL requests to automate and monitor the install process. We got it working, but we still had to face our biggest challenge yet, integrating the cookbooks meant for physical hardware onto virtualized nodes. They were expecting particular configurations such as physical drive formatting and partitioning, or where master services are already defined and running. Instead, we had to get them working with our minimum 1x50GB virtual volumes, and anything we changed would have to still be working on the physical nodes. After some difficult work, and with some clever tricks with attributes and Chef injection, we were able to preconfigure the nodes to be recognized by the recipes and were able to slowly commit our changes back to the ecosystem without impact on the main cluster\u2019s health.</p>\n\n<h3 id=\"a-product-is-born\">A Product is Born</h3>\n<p>By this point, we had written the entire process as a Python application and set it up on a nightly loop. Every night, it would build an entire Hadoop cluster, from scratch, smoke test it, and report the results to the team. And it worked! Word started to spread among the organization and we were suddenly getting requests from users of our production cluster. They wanted to use REDstack to spin up a sandbox for them to use for Hadoop. Not only would it be more powerful, and sharable by multiple people on a team, it would look exactly like our production cluster because it uses all of the same configurations and assets.</p>\n\n<h3 id=\"opportunity\">Opportunity!</h3>\n<p>As a data engineer, wouldn\u2019t it be nice if I could have a kerberized sandbox environment that looked similar to a production cluster, was easy to work with and user friendly? This is what was possible with these environments, so we started to try and provide them to teams. It didn\u2019t work very well initially, users cloned the repo and ran it on their laptops and ran into all sorts of issues with dependencies and versions with Chef versions, ruby versions, gem versions, and python versions. There were simply too many dependencies to manage on on different environments, even with existing dependency management tools. We needed a way to hide all of the complexity and eliminate the need for users run anything on their computer.</p>\n\n<h3 id=\"the-full-stack-service\">The Full-Stack Service</h3>\n<p>This led us to the development of our full-stack cluster delivery service, Stacker. Stacker is an API running on top of a database, orchestrating REDstack deploys in threads and listening for requests over a front-end web page. Users simply submit a request on the website and a cluster will be delivered to them in about an hour. At this time, there have been more than 500 unique cluster requests and at least 30 teams are actively using REDstack as a part of their development process.</p>\n\n<h3 id=\"ongoing-development\">Ongoing Development</h3>\n<p>Over time, REDstack has evolved to include multiple types of Big Data clusters. We now provide Elasticsearch clusters as well as Druid in addition to the original Hadoop clusters. Our service continues to evolve with new releases and versions of the software, and additional ease-of-user work on our build in functions for user management and cluster administration.</p>\n\n<h4 id=\"about-the-author\">About the Author</h4>\n<p>Eric Krenz is a Senior Data Engineer on the Big Data Platform Team at Target.</p>\n\n  <p><a href=\"https://target.github.io/big%20data%20infrastructure/REDstack-Hadoop-as-a-Service\">REDstack</a> was originally published by Target Brands, Inc at <a href=\"https://target.github.io\">target tech</a> on December 07, 2017.</p>"
      }
    ],
    "summary": "<h2 id=\"redstack-is-now-open-source\">REDstack is Now Open Source!</h2>\n<p>We are officially open sourcing REDstack, our sandbox tool for Big Data development at Target.</p>\n\n<h3 id=\"what-is-redstack\">What is REDstack?</h3>\n<p>REDstack is a tool for provisioning kerberized clusters on OpenStack.  We created it with four goals in mind:</p>\n\n<ul>\n  <li>Provide a secured environment, with the ability to leverage preconfigured LDAP and Kerberos servers.</li>\n  <li>Out of the box usability, allowing you to log in with preconfigured user accounts.</li>\n  <li>Custom user management utilities to administer the cluster.</li>\n  <li>Provide a fully customizable experience, everything is a configuration option in your build files:\n    <ul>\n      <li>Cluster size, node sizes, types of nodes and node roles,</li>\n      <li>Hadoop configurations, heap sizes, and components,</li>\n      <li>All users, passwords, and secure assets.</li>\n    </ul>\n  </li>\n</ul>\n\n<h3 id=\"components\">Components</h3>\n<p>REDstack is made up of two major components:</p>\n\n<ol>\n  <li><a href=\"https://supermarket.chef.io/cookbooks/hdp-cloud\">hdp-cloud</a> - The cookbook\n    <ul>\n      <li>The cookbook is used by the application itself to install components and lay down cluster configuration.</li>\n      <li>The cookbook can be used independently of REDstack to manually provision a cluster.</li>\n    </ul>\n  </li>\n  <li><a href=\"https://github.com/target/redstack\">REDstack</a> - The orchestration component\n    <ul>\n      <li>REDstack is a python application that performs all of the high-level complexities and timings associated with a full Hadoop installation:\n        <ul>\n          <li>Orchestrates the provisioning of resources over OpenStack APIs,</li>\n          <li>Controls and monitors parallel Chef deployment across the cluster,</li>\n          <li>Manages and monitors cluster component install over HTTPS requests.</li>\n        </ul>\n      </li>\n    </ul>\n\n    <p>REDstack is bundled with a Docker image, where the configs are set up locally before an installation, and all of the dependencies are updated and configured.</p>\n  </li>\n</ol>\n\n<h3 id=\"how-to-get-started\">How to Get Started</h3>\n<p>Head over to the repository at https://github.com/target/redstack and follow along. The repo has instructions on how to build and configure the clusters using the included Docker image.</p>\n\n<h2 id=\"history-of-the-project\">History of the Project</h2>\n<p>Target\u2019s Big Data Platform Team manages multiple Big Data environments, with hundreds of nodes and many PB\u2019s of data.  As mentioned in our prior blog posts, we depend heavily on Chef as a core part of our CI/CD pipeline.  During our testing a couple of years ago, we identified a large opportunity to provide a way to do full integration testing with our Chef cookbooks. This opportunity opened the door for a new product.</p>\n\n<h3 id=\"origins\">Origins</h3>\n<p>Early on, we released a product internally called Pushbutton. This was a three-node cluster that ran on a standard issue laptop at Target. It was kerberized, and it worked well as a Sandbox environment for developers because it had the same security setup. PushButton, however, did not use the same cookbooks as the main cluster. We wanted something that could do what PushButton did, but with our real cookbooks in a larger environment. By creating a full cluster from scratch, we would be able to understand exactly how the cookbooks would function when applied to new nodes and make sure the cookbooks were in a constant working state. We also needed a little bit larger of a sandbox, otherwise we would have difficulty testing high availability (HA) components, or those that run across multiple nodes, like Apache Zookeeper.</p>\n\n<h3 id=\"toward-redstack\">Toward REDStack</h3>\n<p>Our early exploration started out by trying to adapt the existing PushButton work onto OpenStack. We used shell scripts to automate creation of instances, Knife to bootstrap the nodes with the Chef recipes, and cURL requests to automate and monitor the install process. We got it working, but we still had to face our biggest challenge yet, integrating the cookbooks meant for physical hardware onto virtualized nodes. They were expecting particular configurations such as physical drive formatting and partitioning, or where master services are already defined and running. Instead, we had to get them working with our minimum 1x50GB virtual volumes, and anything we changed would have to still be working on the physical nodes. After some difficult work, and with some clever tricks with attributes and Chef injection, we were able to preconfigure the nodes to be recognized by the recipes and were able to slowly commit our changes back to the ecosystem without impact on the main cluster\u2019s health.</p>\n\n<h3 id=\"a-product-is-born\">A Product is Born</h3>\n<p>By this point, we had written the entire process as a Python application and set it up on a nightly loop. Every night, it would build an entire Hadoop cluster, from scratch, smoke test it, and report the results to the team. And it worked! Word started to spread among the organization and we were suddenly getting requests from users of our production cluster. They wanted to use REDstack to spin up a sandbox for them to use for Hadoop. Not only would it be more powerful, and sharable by multiple people on a team, it would look exactly like our production cluster because it uses all of the same configurations and assets.</p>\n\n<h3 id=\"opportunity\">Opportunity!</h3>\n<p>As a data engineer, wouldn\u2019t it be nice if I could have a kerberized sandbox environment that looked similar to a production cluster, was easy to work with and user friendly? This is what was possible with these environments, so we started to try and provide them to teams. It didn\u2019t work very well initially, users cloned the repo and ran it on their laptops and ran into all sorts of issues with dependencies and versions with Chef versions, ruby versions, gem versions, and python versions. There were simply too many dependencies to manage on on different environments, even with existing dependency management tools. We needed a way to hide all of the complexity and eliminate the need for users run anything on their computer.</p>\n\n<h3 id=\"the-full-stack-service\">The Full-Stack Service</h3>\n<p>This led us to the development of our full-stack cluster delivery service, Stacker. Stacker is an API running on top of a database, orchestrating REDstack deploys in threads and listening for requests over a front-end web page. Users simply submit a request on the website and a cluster will be delivered to them in about an hour. At this time, there have been more than 500 unique cluster requests and at least 30 teams are actively using REDstack as a part of their development process.</p>\n\n<h3 id=\"ongoing-development\">Ongoing Development</h3>\n<p>Over time, REDstack has evolved to include multiple types of Big Data clusters. We now provide Elasticsearch clusters as well as Druid in addition to the original Hadoop clusters. Our service continues to evolve with new releases and versions of the software, and additional ease-of-user work on our build in functions for user management and cluster administration.</p>\n\n<h4 id=\"about-the-author\">About the Author</h4>\n<p>Eric Krenz is a Senior Data Engineer on the Big Data Platform Team at Target.</p>\n\n  <p><a href=\"https://target.github.io/big%20data%20infrastructure/REDstack-Hadoop-as-a-Service\">REDstack</a> was originally published by Target Brands, Inc at <a href=\"https://target.github.io\">target tech</a> on December 07, 2017.</p>"
  }
}