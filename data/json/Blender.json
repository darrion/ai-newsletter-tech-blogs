{
  "company": "Blender",
  "title": "Blender",
  "xmlUrl": "https://code.blender.org/rss",
  "htmlUrl": "https://code.blender.org/",
  "content": "\n\n\n\n  A New Developer Documentation Platform \u2014 Developer Blog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeveloper\n\n\n\n\n\n\n\n\n\n\n\n\n\nProjects\n\n\nDocs\n\n\nBlog\n\n\nForum\n\n\nBuilds\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBLENDER.ORG\n\n\n\n\n\n\n\n\n\n\nDownload\nGet the latest Blender, older versions, or experimental builds.\n\n\n\n\n\n\nWhat's New\nStay up-to-date with the new features in the latest Blender releases.\n\n\n\n\n\nLEARNING & RESOURCES\n\n\n\n\n\n\n\n\n\n\nBlender Studio\nAccess production assets and knowledge from the open movies.\n\n\n\n\n\n\nManual\nDocumentation on the usage and features in Blender.\n\n\n\n\n\nDEVELOPMENT\n\n\n\n\n\n\n\n\n\n\nDevelopers Blog\nLatest development updates, by Blender developers.\n\n\n\n\n\n\nDocumentation\nGuidelines, release notes and development docs.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBenchmark\nA platform to collect and share results of the Blender Benchmark.\n\n\n\n\n\n\nBlender Conference\nThe yearly event that brings the community together.\n\n\n\n\n\n\nDONATE\n\n\n\n\n\n\n\n\n\n\nDevelopment Fund\nSupport core development with a monthly contribution.\n\n\n\n\n\n\nOne-time Donations\nPerform a single donation with more payment options available.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeatures\n\n\nDownload\n\n\nSupport\n\n\nGet Involved\n\n\nAbout\n\n\nJobs\n\n\nStore\n\n\n Donate\n\n\n\n\n\n\n\n\n\n\nA New Developer Documentation Platform\n\nDecember 13th, 2023\nGeneral Development, Technical Documentation\n\nJulian Eisel \n\n\n\n\nIn this proposal, Julian Eisel highlights how a more accessible and powerful documentation platform can help the push towards a development culture more centered around documentation and design.\n\nThe focus is on issues with higher level technical documentation (architecture, modules, overall intent, etc.), not lower level API documentation.\n\n\n\nThis post is based on a presentation given by Julian Eisel at the Blender headquarters during November 2023.\n\n\n\nDownload Slides\n\n\n\nThe Current Platform\nTo start off easy, let\u2019s analyze the current wiki-based documentation system.\n\nThe Editing Experience\nThe MediaWiki text editor feels outdated, and uses a specific syntax (not Markdown), but most of all provides a very cumbersome workflow for uploading images. These aspects affect the motivation of developers when using it.\nA more modern alternative called HackMD is used much more often instead. That is a Markdown editor with live-preview and collaborative editing, where multiple people can work on a document at the same time.\nLive editing in HackMD: Edit Markdown on the left, see the rendered result on the right \u2013 updated as you type.\nSome developers used this for technical documentation too and it works well. Eventually, the content needs to be moved to the wiki, which means having to convert the Markdown syntax to the wiki syntax. Sometimes this meant that content wouldn\u2019t end up getting ported.\nNavigation and Structure\n\nCurrently, the navigation on the wiki provides a limited amount of entry points (for the most used pages) and requires manual edits to add new entries, both for the sidebar and for breadcrumbs. This means that often it is not easy to understand the context of a document, and it is also not easy to find the document on the platform starting from the landing page.\n\nWiki page navigation: Unrelated, hard-coded top level navigation on the left, current page navigation on the right. There\u2019s no good navigation in-between.\nMore effort can be put in categorizing content as well, making entry-level docs easier to find.\nDisconnected From the Code\nThe wiki is a separate website that you typically don\u2019t have open unless you consciously decide to use it. Other organizations found that such platforms tend to see less activity from developers; they require a context switch. The closer documentation is to the code, where developers do their actual work, the more likely they are to work on it as well.\nImagine if descriptions for tooltips would live on a separate webpage. They would probably get outdated quite quickly. Currently they live in the source code, and developers maintain them actively (even if there\u2019s a lot of room for improvement still).\nInvite-only Platform\nTo prevent spam and abuse, the wiki has been an invite-only platform for several years now. This makes extremely hard for community members to get involved and contribute.\nUnrelated to the Platform\nThere is a shortage of technical documentation. While there are a few well documented areas, and more general information like build instructions are covered well, a lot of Blender\u2019s designs are not documented, and much of the existing documentation is not up-to-date or simply not that useful.\nThe practical difficulty of contributing improvements, and the lack of good examples has led many developers to not open up the wiki and contribute to it.  \n\nDocumentation Culture\nLet\u2019s take a step back, and look for more intrinsic motivations. In fact, this article isn\u2019t just about a change in platform. It is looking for something bigger: Can we build a new developer documentation culture?\nThat is a big question, isn\u2019t it? Well, here\u2019s some good news: others have done it. Check out \u201cHow Google, Twitter and Spotify built a culture of documentation\u201d.\nThis change was driven by technical writers. Originally technical writers that felt like they failed in addressing the problem they were supposed to solve. They would just jump from project to project, leaving behind brand new documentation that would become outdated in no time. Nowadays, their technical documentation gets used and updated all the time \u2013 by engineers! Can it be true?\nHow did they do it?\nVarious resources from Twitter, Google and Spotify tell their story. They closely followed the same approach, even if specifics differ. Briefly, here are some key findings:\n\nCulture of docs: Regular documentation sprints. Educate developers on technical writing. Lead by example.\nStandardize and centralize: Provide answers about writing documentation before they arise. Clear examples and templates. Share the same platform for all documentation.\nFeedback loops: Make it easy to give feedback (e.g. mark text in documentation > right click > \u201cReport a Bug\u201d).\nKeep it simple: Don\u2019t overcomplicate; avoid/remove any points of friction so the actual content is the focus.\n\nThe technical writers are still there, but their role changed to helping and empowering developers. For example, they maintain the documentation infrastructure and make relevant strategic decisions. They make sure documentation just works for the developers/engineers.\nThis brings us to what appears to be the most important change: Fiercely optimize for the engineer.\nTwitter, Google and Spotify have committed to a documentation infrastructure that is based on the idea of Docs as Code.\nDocs as Code\nThe idea is simple: Treat documentation like code. Employ a workflow that developers are comfortable with; make them feel at home. This includes features like version control, collaboration and automation.\nMore specifically, Docs as Code typically features the following:\n\nSimple markup language (Markdown, ReStructured text, etc.)\nVersion controlled repository, close to the code\nPull requests, versioning, branching\nForge integration (Gitea, Github, etc.)\nContinuous delivery, automated checks\n\nWe actually have some experience with such platforms. The Blender Manual, Blender Studio pipeline documentation and Flamenco documentation follow a similar approach. Let\u2019s try to bring this to the developer documentation. This is where it can really shine.\nNew Platform Proposal\nThings should be simple, so they key elements of the new platform are simple as well:\n\nMaterial for MkDocs\nContinuous delivery via buildbot\nEdit with preview in Gitea\nGit LFS (Large File Storage) repository\nPossibly pulled with make update\nURL: developer.blender.org/docs\n\nMaterial for MkDocs is a Material based theme and framework around the MkDocs static site generator. Essentially it turns Markdown files into HTML pages that look great and offer a great browsing experience. It has been chosen over alternatives (such as Sphinx, VitePress and Hugo) since it seems like the best fitting platform. The main features are:\n\nEasy to set up and use. Developers will have it up and running in an instant.\nMarkdown is readable in source, widely used (for example on most developer platforms) and well supported. Many IDEs have builtin Markdown editing and previewing support. Copy & paste from HackMD possible.\nModern looking, rich in features (client side search, dark mode, \u2026 see below) and a big amount of common markdown extensions and plugins.\nLive reloading.\nPython based.\nGood search.\n\nOverall it\u2019s a great documentation experience for both writing and browsing.\nImpressions\nThere is an experimental setup of the new documentation platform available under developer.blender.org/docs.\nThis is how a documentation page looks like:\n\nNote the top-level navigation at the top, the navigation for the current category on the left, and the current page navigation on the right.\nA simple toggle in the header switches between light and dark mode:\n\n\n\n\n\n\n\n\n\n\nMaterial for MkDocs supports Mermaid to define diagrams as text in Markdown, and render them on the fly using the theme colors:\n\n\n\n\n\n\n\n\n\n\nWho would\u2019ve thought that creating such diagrams can actually be fun (for developers)!\nLastly, Material for MkDocs comes with a great working search feature:\n\n\n\n\n\n\t\t\t\t\tDark\t\t\t\t\n\n\n\n\t\t\t\t\tLight\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\nEditing\nThere are two main workflows for editing pages with the new platform. Online and offline editing.\nTo edit pages online, simply click the editing icon at the top of a page: \n\nThis brings you to Gitea, where you can immediately edit the page\u2019s Markdown. \n\nAlthough a side-by-side view would be a lot nicer, a simple click on the Preview tab gives a preview of the rendered result: \n\nThis is Gitea\u2019s Markdown preview, so there might be smaller differences to the output of Material for MkDocs. But it works extremely well. Plus, as you can see, Gitea supports the Mermaid diagrams too!\nThe second way to edit is offline. Many editors support Markdown editing and previewing. Here is a setup in Visual Studio Code:\n\nMkDocs supports live reloading. Every time you save the file, the preview on the right gets updated. This is using the live preview extension for Visual Studio Code, but the builtin Markdown preview works well too.\nWhen done, you can simply commit and push the edits (or create a pull request). Either via the Gitea UI when editing online, or manually, using the Git interface of your choice. Buildbot will update the documentation output on developer.blender.org/docs within few minutes.\nSince this is Markdown, there is another convenient way to edit the docs: HackMD. Work with live preview and in collaboration with others, then simply copy the result from there to the documentation!\nGoodbye Wiki?\nThe new platform would replace the current wiki. All the documentation, as well as the release notes can move to the new platform. Personal pages like the weekly reports of developers can be moved to personal repositories on Gitea, also using simple Markdown.\nAlthough converters from Wiki syntax to Markdown are available, the transition will require manual work. Mostly to fix issues from the conversion, fix links, add missing images, etc. A few people volunteered to help already, more help would be welcome.\nStatus & Next Steps\nMost preparation work is done:\n\nResearch, testing and experiments\nBuy-in from developers and stakeholders\nBuildbot continuous delivery setup (push changes, Buildbot generates and publishes output to developer.blender.org/docs)\nHosting on developer.blender.org/docs\nblender-developer-docs Git LFS repository with Material for MkDocs setup & customizations\n\nFollow the latest status on the dedicated task: #116055: New Developer Documentation Platform\nThis means we are ready to prepare the actual transition, whereby the wiki will be archived. Once this is done we can decide if we want to include the developer documentation as part of the source code or its additional resources (updated together with the source code via make update). This would move the documentation closer to the code, and ensure there\u2019s easy and continuously updated access. Further, we can investigate ways to include internal API documentation (generated from C/C++ API comments using Doxygen) as part of the platform.\n\nBuilding a developer documentation culture is challenging but possible, like other organizations show. Maybe all it takes is a few clever changes, and a bit of pushing to reach some tipping point; and then it snowballs!\nThe truth is, developers know that they should be writing technical documentation. They just don\u2019t feel empowered enough to do so, there are too many hurdles and too few incentives. It is time to do some changes:\n\nA new documentation platform that is optimized for the engineer (docs as code) and removes friction from the workflow.\nMake it easy to write documentation by providing clear examples, templates, tools and education.\nRethink how we write documentation. Make it actually useful for new and experienced developers alike.\nFoster a culture of documentation. Push until using and writing technical documentation becomes part of every day life for a developer \u2014 like it happened with unit testing.\nOpen up to the community. A new culture can be a lot more exciting for technical writers or the general community to get involved.\n\nOr, how the technical writers who revolutionized technical documentation at Google put it:\n\nFirst tooling, then culture. [\u2026] Focus on the Engineer.\nThe Knowledge: Towards a Culture of Engineering Documentation \u2013 Riana MacNamara, Google\n\n\nSupport the Future of Blender\nDonate and support Blender Foundation to work on core Blender development.\n\nDonate to Blender\n\n\n\n\n\n\n\n Grease Pencil: Task Force \n\n \n\n\n\n\n\n\n\n\n2 comments\n\n\n\n\n\n\n\t\t\t\t\tLoic Dautry\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\n\n\t\t\t\t\t\tDecember 18, 2023\t\t\t\t\t\n\n\nThis sound like a huge step forward!\nWill this be only for the developers\u2019 documentation, or will it also be used in the future for other documentations, such as Blender itself and bpy?\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tSkylar\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\n\n\t\t\t\t\t\tDecember 15, 2023\t\t\t\t\t\n\n\nAmazing!\nThis (+ Doxygen ideally) should really ease contributions.\nGreat initiative.\n\n\n\n\n\n\n\n\n\n\t\t\t\tIn order to prevent spam, comments are closed 15 days after the post is published.\n\t\t\t\tFeel free to continue the conversation on the forums.\n\t\t\t\n\n\n\nSHARE THIS STORY ON\n\n\n\n Facebook\n\t\t\t\t\t\t\t\t\t\n\n\n\n X\n\t\t\t\t\t\t\t\t\t\n\n\n\n Reddit\n\t\t\t\t\t\t\t\t\t\n\n\n\n LinkedIn\n\t\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n \n\n\n\nDownload\n\n\nLatest Blender\n\n\nBlender LTS\n\n\nBlender Benchmark\n\n\nPrevious Versions\n\n\nExperimental Builds\n\n\nSource Code\n\n\nRelease Notes\n\n\nRequirements\n\n\nOrganization\n\n\nPeople\n\n\nJobs\n\n\n\nAbout\n\n\nBlender Foundation\n\n\nBlender Institute\n\n\nBlender Studio\n\n\nLicense\n\n\nLogo & Trademark\n\n\nCredits\n\n\nPrivacy Policy\n\n\nArticles\n\n\nNews\n\n\nPress Releases\n\n\nUser Stories\n\n\n\nGet Involved\n\n\nDashboard\n\n\nDevelopment\n\n\nDocumentation\n\n\nEducation\n\n\nDonate\n\n\nDevelopment Fund\n\n\nOne-time Donations\n\n\nBlender Studio\n\n\nFilms\n\n\nTraining\n\n\n\nDevelopers\n\n\nGet Started\n\n\nProjects\n\n\nDocs\n\n\nBlog\n\n\nForum\n\n\nPython API\n\n\nSupport\n\n\nManual\n\n\nCommunity\n\n\nFAQ\n\n\nBlender Conference\n\nFollow Blender\n\n\n\nYouTube\n            \n\n\n\nX\n            \n\n\n\nInstagram\n            \n\n\n\nFacebook\n            \n\n\n\nLinkedIn\n            \n\n\n\n\n\nMastodon\n            \n\n\n\n\n\n\nArtistic freedom starts with Blender  The Free and Open Source 3D Creation Suite\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "latestPost": {
    "title": "A New Developer Documentation Platform",
    "title_detail": {
      "type": "text/plain",
      "language": null,
      "base": "https://code.blender.org/feed/",
      "value": "A New Developer Documentation Platform"
    },
    "links": [
      {
        "rel": "alternate",
        "type": "text/html",
        "href": "https://code.blender.org/2023/12/a-new-developer-documentation-platform/"
      }
    ],
    "link": "https://code.blender.org/2023/12/a-new-developer-documentation-platform/",
    "comments": "https://code.blender.org/2023/12/a-new-developer-documentation-platform/#comments",
    "authors": [
      {
        "name": "Julian Eisel"
      }
    ],
    "author": "Julian Eisel",
    "author_detail": {
      "name": "Julian Eisel"
    },
    "published": "Wed, 13 Dec 2023 16:04:21 +0000",
    "published_parsed": [
      2023,
      12,
      13,
      16,
      4,
      21,
      2,
      347,
      0
    ],
    "tags": [
      {
        "term": "General Development",
        "scheme": null,
        "label": null
      },
      {
        "term": "Technical Documentation",
        "scheme": null,
        "label": null
      },
      {
        "term": "documentation",
        "scheme": null,
        "label": null
      }
    ],
    "id": "https://code.blender.org/?p=11354",
    "guidislink": false,
    "summary": "A new platform to foster a shift in developer documentation culture.",
    "summary_detail": {
      "type": "text/html",
      "language": null,
      "base": "https://code.blender.org/feed/",
      "value": "A new platform to foster a shift in developer documentation culture."
    },
    "content": [
      {
        "type": "text/html",
        "language": null,
        "base": "https://code.blender.org/feed/",
        "value": "<p><em>In this proposal, Julian Eisel highlights how a more accessible and powerful documentation platform can help the push towards a development culture more centered around documentation and design.</em></p>\n\n\n\n<div class=\"wp-block-group is-style-default has-medium-font-size is-layout-constrained wp-block-group-is-layout-constrained\" style=\"padding-bottom: 0.45em;\">\n<p><em>The focus is on issues with higher level technical documentation (architecture, modules, overall intent, etc.), not lower level API documentation.</em></p>\n</div>\n\n\n\n<div class=\"wp-block-columns are-vertically-aligned-top is-style-box is-layout-flex wp-container-core-columns-layout-1 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-vertically-aligned-top is-style-default has-small-font-size is-layout-flow wp-block-column-is-layout-flow\" style=\"padding-top: 0; padding-right: 0; padding-bottom: 0; padding-left: 0;\">\n<p>This post is based on a presentation given by Julian Eisel at the Blender headquarters during November 2023.</p>\n</div>\n\n\n\n<div class=\"wp-block-column is-vertically-aligned-top is-layout-flow wp-block-column-is-layout-flow\">\n<div class=\"wp-block-buttons is-content-justification-center is-layout-flex wp-container-core-buttons-layout-1 wp-block-buttons-is-layout-flex\">\n<div class=\"wp-block-button has-custom-width wp-block-button__width-100 has-custom-font-size is-style-outline has-small-font-size\"><a class=\"wp-block-button__link wp-element-button\" href=\"https://code.blender.org/wp-content/uploads/2023/12/A-New-Developer-Documentation-Platform.pdf?x42760\" rel=\"https://code.blender.org/wp-content/uploads/2023/12/a-new-developer-documentation-platform.pdf\">Download Slides</a></div>\n</div>\n</div>\n</div>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#the-current-platform\"><h2 class=\"wp-block-heading is-style-default\" id=\"the-current-platform\">The Current Platform</h2></a>\n\n\n\n<p>To start off easy, let&rsquo;s analyze the current wiki-based documentation system.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-2023-12-05-at-15.52.27.png?x42760\"><img alt=\"The Wiki landing page.\" class=\"wp-image-11525\" height=\"699\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-2023-12-05-at-15.52.27-1024x699.png?x42760\" width=\"1024\" /></a></figure>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#the-editing-experience\"><h3 class=\"wp-block-heading\" id=\"the-editing-experience\">The Editing Experience</h3></a>\n\n\n\n<p>The MediaWiki text editor feels outdated, and uses a specific syntax (not Markdown), but most of all provides a very cumbersome workflow for uploading images. These aspects affect the motivation of developers when using it.</p>\n\n\n\n<p>A more modern alternative called <a href=\"https://hackmd.io/\">HackMD</a> is used much more often instead. That is a Markdown editor with live-preview and collaborative editing, where multiple people can work on a document at the same time.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-15-30-09-1.png?x42760\"><img alt=\"Live editing in HackMD: Edit Markdown on the left, see the rendered result on the right - updated as you type.\" class=\"wp-image-11417\" height=\"575\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-15-30-09-1-1024x575.png?x42760\" width=\"1024\" /></a><figcaption class=\"wp-element-caption\">Live editing in HackMD: Edit Markdown on the left, see the rendered result on the right &ndash; updated as you type.</figcaption></figure>\n\n\n\n<p>Some developers used this for technical documentation too and it works well. Eventually, the content needs to be moved to the wiki, which means having to convert the Markdown syntax to the wiki syntax. Sometimes this meant that content wouldn&rsquo;t end up getting ported.</p>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#navigation-and-structure\"><h3 class=\"wp-block-heading\" id=\"navigation-and-structure\">Navigation and Structure</h3></a>\n\n\n\n<div class=\"wp-block-group is-nowrap is-layout-flex wp-container-core-group-layout-2 wp-block-group-is-layout-flex\">\n<p>Currently, the navigation on the wiki provides a limited amount of entry points (for the most used pages) and requires manual edits to add new entries, both for the sidebar and for breadcrumbs. This means that often it is not easy to understand the context of a document, and it is also not easy to find the document on the platform starting from the landing page.</p>\n</div>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-15-48-03.png?x42760\"><img alt=\"Wiki page navigation: Unrelated, hard-coded top level navigation on the left, current page navigation on the right. There's no good navigation in-between.\" class=\"wp-image-11433\" height=\"551\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-15-48-03-1024x551.png?x42760\" width=\"1024\" /></a><figcaption class=\"wp-element-caption\">Wiki page navigation: Unrelated, hard-coded top level navigation on the left, current page navigation on the right. There&rsquo;s no good navigation in-between.</figcaption></figure>\n\n\n\n<p>More effort can be put in categorizing content as well, making entry-level docs easier to find.</p>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#disconnected-from-the-code\"><h3 class=\"wp-block-heading\" id=\"disconnected-from-the-code\">Disconnected From the Code</h3></a>\n\n\n\n<p>The wiki is a separate website that you typically don&rsquo;t have open unless you consciously decide to use it. Other organizations found that such platforms tend to see less activity from developers; they require a context switch. The closer documentation is to the code, where developers do their actual work, the more likely they are to work on it as well.</p>\n\n\n\n<p>Imagine if descriptions for tooltips would live on a separate webpage. They would probably get outdated quite quickly. Currently they live in the source code, and developers maintain them actively (even if there&rsquo;s a lot of room for improvement still).</p>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#invite-only-platform\"><h3 class=\"wp-block-heading\" id=\"invite-only-platform\">Invite-only Platform</h3></a>\n\n\n\n<p>To prevent spam and abuse, the wiki has been an invite-only platform for several years now. This makes extremely hard for community members to get involved and contribute.</p>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#unrelated-to-the-platform\"><h3 class=\"wp-block-heading\" id=\"unrelated-to-the-platform\">Unrelated to the Platform</h3></a>\n\n\n\n<p><strong>There is a shortage of technical documentation.</strong> While there are a few well documented areas, and more general information like build instructions are covered well, a lot of Blender&rsquo;s designs are not documented, and much of the existing documentation is not up-to-date or simply not that useful.</p>\n\n\n\n<p>The practical difficulty of contributing improvements, and the lack of good examples has led many developers to not open up the wiki and contribute to it.  </p>\n\n\n\n<hr class=\"wp-block-separator has-alpha-channel-opacity\" />\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#documentation-culture\"><h2 class=\"wp-block-heading\" id=\"documentation-culture\">Documentation Culture</h2></a>\n\n\n\n<p>Let&rsquo;s take a step back, and look for more intrinsic motivations. In fact, this article isn&rsquo;t just about a change in platform. It is looking for something bigger: <em>Can we build a new developer documentation </em>culture<em>?</em></p>\n\n\n\n<p>That is a big question, isn&rsquo;t it? Well, here&rsquo;s some good news: others have done it. Check out <a href=\"https://www.doctave.com/blog/2021/09/07/how-google-twitter-and-spotify-build-culture-of-documentation.html\">&ldquo;How Google, Twitter and Spotify built a culture of documentation&rdquo;</a>.</p>\n\n\n\n<p>This change was driven by technical writers. Originally technical writers that felt like they failed in addressing the problem they were supposed to solve. They would just jump from project to project, leaving behind brand new documentation that would become outdated in no time. Nowadays, their technical documentation gets <strong>used and updated all the time &ndash; by engineers!</strong> Can it be true?</p>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#how-did-they-do-it\"><h3 class=\"wp-block-heading\" id=\"how-did-they-do-it\">How did they do it?</h3></a>\n\n\n\n<p>Various resources from Twitter, Google and Spotify tell their story. They closely followed the same approach, even if specifics differ. Briefly, here are some key findings:</p>\n\n\n\n<ul>\n<li><strong>Culture of docs:</strong> Regular documentation sprints. Educate developers on technical writing. Lead by example.</li>\n\n\n\n<li><strong>Standardize and centralize:</strong> Provide answers about writing documentation before they arise. Clear examples and templates. Share the same platform for all documentation.</li>\n\n\n\n<li><strong>Feedback loops:</strong> Make it easy to give feedback (e.g. mark text in documentation &gt; right click &gt; &ldquo;<em>Report a Bug</em>&rdquo;).</li>\n\n\n\n<li><strong>Keep it simple:</strong> Don&rsquo;t overcomplicate; avoid/remove any points of friction so the actual content is the focus.</li>\n</ul>\n\n\n\n<p>The technical writers are still there, but their role changed to helping and empowering developers. For example, they maintain the documentation infrastructure and make relevant strategic decisions. They make sure documentation just works for the developers/engineers.</p>\n\n\n\n<p>This brings us to what appears to be the most important change: <em>Fiercely optimize for the engineer.</em></p>\n\n\n\n<p>Twitter, Google and Spotify have committed to a documentation infrastructure that is based on the idea of <strong>Docs as Code</strong>.</p>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#docs-as-code\"><h3 class=\"wp-block-heading\" id=\"docs-as-code\">Docs as Code</h3></a>\n\n\n\n<p>The idea is simple: Treat documentation like code. Employ a workflow that developers are comfortable with; make them feel at home. This includes features like version control, collaboration and automation.</p>\n\n\n\n<p>More specifically, Docs as Code typically features the following:</p>\n\n\n\n<ul>\n<li>Simple markup language (Markdown, ReStructured text, etc.)</li>\n\n\n\n<li>Version controlled repository, close to the code</li>\n\n\n\n<li>Pull requests, versioning, branching</li>\n\n\n\n<li>Forge integration (Gitea, Github, etc.)</li>\n\n\n\n<li>Continuous delivery, automated checks</li>\n</ul>\n\n\n\n<p>We actually have some experience with such platforms. The <a href=\"https://docs.blender.org/manual/en/latest/\">Blender Manual</a>, <a href=\"https://studio.blender.org/pipeline/\">Blender Studio pipeline documentation</a> and <a href=\"https://flamenco.blender.org/\">Flamenco documentation</a> follow a similar approach. Let&rsquo;s try to bring this to the developer documentation. This is where it can really shine.</p>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#new-platform-proposal\"><h2 class=\"wp-block-heading is-style-default\" id=\"new-platform-proposal\">New Platform Proposal</h2></a>\n\n\n\n<p>Things should be simple, so they key elements of the new platform are simple as well:</p>\n\n\n\n<ul>\n<li><a href=\"https://squidfunk.github.io/mkdocs-material/\">Material for MkDocs</a></li>\n\n\n\n<li>Continuous delivery via buildbot</li>\n\n\n\n<li>Edit with preview in Gitea</li>\n\n\n\n<li>Git LFS (Large File Storage) repository</li>\n\n\n\n<li>Possibly pulled with <code>make update</code></li>\n\n\n\n<li>URL: <a href=\"http://developer.blender.org/docs\">developer.blender.org/docs</a></li>\n</ul>\n\n\n\n<p><a href=\"https://squidfunk.github.io/mkdocs-material/\">Material for MkDocs</a> is a <a href=\"https://m3.material.io/\">Material</a> based theme and framework around the <a href=\"https://www.mkdocs.org/\">MkDocs</a> static site generator. Essentially it turns Markdown files into HTML pages that look great and offer a great browsing experience. It has been chosen over alternatives (such as Sphinx, VitePress and Hugo) since it seems like the best fitting platform. The main features are:</p>\n\n\n\n<ul>\n<li>Easy to set up and use. Developers will have it up and running in an instant.</li>\n\n\n\n<li>Markdown is readable in source, widely used (for example on most developer platforms) and well supported. Many IDEs have builtin Markdown editing and previewing support. Copy &amp; paste from HackMD possible.</li>\n\n\n\n<li>Modern looking, rich in features (client side search, dark mode, &hellip; see below) and a big amount of common <a href=\"https://python-markdown.github.io/extensions/\">markdown extensions</a> and <a href=\"https://github.com/mkdocs/catalog\">plugins</a>.</li>\n\n\n\n<li>Live reloading.</li>\n\n\n\n<li>Python based.</li>\n\n\n\n<li>Good search.</li>\n</ul>\n\n\n\n<p>Overall it&rsquo;s a great documentation experience for both writing and browsing.</p>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#impressions\"><h3 class=\"wp-block-heading\" id=\"impressions\">Impressions</h3></a>\n\n\n\n<p>There is an experimental setup of the new documentation platform available under <a href=\"http://developer.blender.org/docs\">developer.blender.org/docs</a>.</p>\n\n\n\n<p>This is how a documentation page looks like:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-16-32-28.png?x42760\"><img alt=\"Documentation page for the GPU module.\" class=\"wp-image-11482\" height=\"547\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-16-32-28-1024x547.png?x42760\" width=\"1024\" /></a></figure>\n\n\n\n<p>Note the top-level navigation at the top, the navigation for the current category on the left, and the current page navigation on the right.</p>\n\n\n\n<p>A simple toggle in the header switches between light and dark mode:</p>\n\n\n<div class=\"compare-media\" id=\"compare-media-block_ba697b63d95523733d36df125e183d91\">\n\t<div class=\"images-compare\">\n\t\t<div style=\"display: none;\">\n\t\t\t\n\t\t\t\t\t\t\t<img alt=\"\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-16-10-45-1024x518.png?x42760\" />\n\t\t\t\t\t</div>\n\n\t\t<div>\n\t\t\t\n\t\t\t\t\t\t\t<img alt=\"\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-16-10-41-1024x518.png?x42760\" />\n\t\t\t\t\t</div>\n\t</div>\n\n\t\n  </div>\n\n\n\n\n<p>Material for MkDocs supports <a href=\"https://github.com/mermaid-js/mermaid\">Mermaid</a> to define diagrams as text in Markdown, and render them on the fly using the theme colors:</p>\n\n\n<div class=\"compare-media\" id=\"compare-media-block_43e67e43eb1a69b9bd8352b8268e490e\">\n\t<div class=\"images-compare\">\n\t\t<div style=\"display: none;\">\n\t\t\t\n\t\t\t\t\t\t\t<img alt=\"\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-16-21-59-1024x541.png?x42760\" />\n\t\t\t\t\t</div>\n\n\t\t<div>\n\t\t\t\n\t\t\t\t\t\t\t<img alt=\"\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-16-21-56-1024x541.png?x42760\" />\n\t\t\t\t\t</div>\n\t</div>\n\n\t\n  </div>\n\n\n\n\n<p>Who would&rsquo;ve thought that creating such diagrams can actually be fun (for developers)!</p>\n\n\n\n<p>Lastly, Material for MkDocs comes with a great working search feature:</p>\n\n\n<div class=\"tabs\" id=\"tabs-block_afe1142d5bea9ef279402fb68a01472f\">\n\t<div>\n\t\t<ul class=\"nav nav-tabs\">\n\t\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a class=\"nav-link active\" href=\"https://code.blender.org/feed/#t-dark-0\" id=\"t-dark-0-tab\">\n\t\t\t\t\tDark\t\t\t\t</a>\n\t\t\t</li>\n\t\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a class=\"nav-link \" href=\"https://code.blender.org/feed/#t-light-1\" id=\"t-light-1-tab\">\n\t\t\t\t\tLight\t\t\t\t</a>\n\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t<div class=\"tab-content text-center\">\n\t\t\t\t\t\t\t<div class=\"tab-pane show active\" id=\"t-dark-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img alt=\"Dark\" class=\"img-fluid rounded\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-15-55-00.png?x42760\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"tab-pane \" id=\"t-light-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img alt=\"Light\" class=\"img-fluid rounded\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-15-55-08.png?x42760\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t</div>\n\n  </div>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#editing\"><h3 class=\"wp-block-heading\" id=\"editing\">Editing</h3></a>\n\n\n\n<p>There are two main workflows for editing pages with the new platform. Online and offline editing.</p>\n\n\n\n<p>To edit pages online, simply click the editing icon at the top of a page: </p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-19-06-38.png?x42760\"><img alt=\"Edit icon.\" class=\"wp-image-11508\" height=\"75\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-19-06-38.png?x42760\" width=\"73\" /></a></figure>\n\n\n\n<p>This brings you to Gitea, where you can immediately edit the page&rsquo;s Markdown. </p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-19-10-32.png?x42760\"><img alt=\"Edit documentation pages on Gitea with its builtin Markdown editor.\" class=\"wp-image-11511\" height=\"532\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-19-10-32-1024x532.png?x42760\" width=\"1024\" /></a></figure>\n\n\n\n<p>Although a side-by-side view would be a lot nicer, a simple click on the <em>Preview</em> tab gives a preview of the rendered result: </p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-19-10-40.png?x42760\"><img alt=\"Gitea's preview for Markdown text. This can be enabled by clicking on the &quot;Preview&quot; tab.\" class=\"wp-image-11512\" height=\"532\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-12-04-19-10-40-1024x532.png?x42760\" width=\"1024\" /></a></figure>\n\n\n\n<p>This is Gitea&rsquo;s Markdown preview, so there might be smaller differences to the output of Material for MkDocs. But it works extremely well. Plus, as you can see, Gitea supports the Mermaid diagrams too!</p>\n\n\n\n<p>The second way to edit is offline. Many editors support Markdown editing and previewing. Here is a setup in Visual Studio Code:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-11-27-13-06-48.png?x42760\"><img alt=\"Visual studio code setup for editing Markdown. The Markdown text is edited on the left, the result generated with Material for MkDocs is rendered on the right.\" class=\"wp-image-11515\" height=\"535\" src=\"https://code.blender.org/wp-content/uploads/2023/12/Screenshot-from-2023-11-27-13-06-48-1024x535.png?x42760\" width=\"1024\" /></a></figure>\n\n\n\n<p>MkDocs supports live reloading. Every time you save the file, the preview on the right gets updated. This is using the <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode.live-server\">live preview extension</a> for Visual Studio Code, but the builtin Markdown preview works well too.</p>\n\n\n\n<p>When done, you can simply commit and push the edits (or create a pull request). Either via the Gitea UI when editing online, or manually, using the Git interface of your choice. Buildbot will update the documentation output on <a href=\"http://developer.blender.org/docs\">developer.blender.org/docs</a> within few minutes.</p>\n\n\n\n<p>Since this is Markdown, there is another convenient way to edit the docs: HackMD. Work with live preview and in collaboration with others, then simply copy the result from there to the documentation!</p>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#goodbye-wiki\"><h3 class=\"wp-block-heading\" id=\"goodbye-wiki\">Goodbye Wiki?</h3></a>\n\n\n\n<p>The new platform would replace the current <a href=\"https://wiki.blender.org/wiki/Main_Page\">wiki</a>. All the documentation, as well as the release notes can move to the new platform. Personal pages like the weekly reports of developers can be moved to personal repositories on Gitea, also using simple Markdown.</p>\n\n\n\n<p>Although converters from Wiki syntax to Markdown are available, the transition will require manual work. Mostly to fix issues from the conversion, fix links, add missing images, etc. A few people volunteered to help already, more help would be welcome.</p>\n\n\n\n<a class=\"is-heading-anchor\" href=\"https://code.blender.org/feed/#status-next-steps\"><h2 class=\"wp-block-heading\" id=\"status-next-steps\">Status &amp; Next Steps</h2></a>\n\n\n\n<p>Most preparation work is done:</p>\n\n\n\n<ul>\n<li>Research, testing and experiments</li>\n\n\n\n<li>Buy-in from developers and stakeholders</li>\n\n\n\n<li><a href=\"https://builder.blender.org/admin/#/builders/192\">Buildbot continuous delivery setup</a> (push changes, Buildbot generates and publishes output to <a href=\"http://developer.blender.org/docs\">developer.blender.org/docs</a>)</li>\n\n\n\n<li>Hosting on <a href=\"http://developer.blender.org/docs\">developer.blender.org/docs</a></li>\n\n\n\n<li><a href=\"https://projects.blender.org/blender/blender-developer-docs\">blender-developer-docs</a> Git LFS repository with Material for MkDocs setup &amp; customizations</li>\n</ul>\n\n\n\n<p>Follow the latest status on the dedicated task: <a href=\"https://projects.blender.org/blender/blender/issues/116055\">#116055: New Developer Documentation Platform</a></p>\n\n\n\n<p>This means we are ready to prepare the actual transition, whereby the wiki will be archived. Once this is done we can decide if we want to include the developer documentation as part of the source code or its additional resources (updated together with the source code via <code>make update</code>). This would move the documentation closer to the code, and ensure there&rsquo;s easy and continuously updated access. Further, we can investigate ways to include internal API documentation (generated from C/C++ API comments using <a href=\"https://www.doxygen.nl/\">Doxygen</a>) as part of the platform.</p>\n\n\n\n<hr class=\"wp-block-separator has-alpha-channel-opacity\" />\n\n\n\n<p>Building a developer documentation culture is challenging but possible, like other organizations show. Maybe all it takes is a few clever changes, and a bit of pushing to reach some tipping point; and then it snowballs!</p>\n\n\n\n<p>The truth is, developers know that they should be writing technical documentation. They just don&rsquo;t feel empowered enough to do so, there are too many hurdles and too few incentives. It is time to do some changes:</p>\n\n\n\n<ul>\n<li>A new documentation platform that is optimized for the engineer (<em>docs as code)</em> and removes friction from the workflow.</li>\n\n\n\n<li>Make it easy to write documentation by providing clear examples, templates, tools and education.</li>\n\n\n\n<li>Rethink how we write documentation. Make it actually useful for new and experienced developers alike.</li>\n\n\n\n<li>Foster a culture of documentation. Push until using and writing technical documentation becomes part of every day life for a developer &mdash; like it happened with unit testing.</li>\n\n\n\n<li>Open up to the community. A new culture can be a lot more exciting for technical writers or the general community to get involved.</li>\n</ul>\n\n\n\n<p>Or, how the technical writers who revolutionized technical documentation at Google put it:</p>\n\n\n\n<blockquote class=\"wp-block-quote\">\n<p><em><strong>First tooling, then culture. </strong>[&hellip;]<strong> Focus on the Engineer.</strong></em></p>\n<cite><a href=\"http://The%20Knowledge:%20Towards%20a%20Culture%20of%20Engineering%20Documentation\">The Knowledge: Towards a Culture of Engineering Documentation &ndash; Riana MacNamara, Google</a></cite></blockquote>\n\n\n\n<hr class=\"wp-block-separator has-alpha-channel-opacity\" />\n\n\n\n<div class=\"wp-block-group is-style-box mt-5 is-layout-flow wp-block-group-is-layout-flow\">\n<h4 class=\"wp-block-heading\" style=\"font-size: 28px;\">Support the Future of Blender</h4>\n\n\n\n<p class=\"mb-0 is-style-default has-medium-font-size\">Donate and support Blender Foundation to work on core Blender development.</p>\n\n\n\n<div class=\"wp-block-buttons is-content-justification-right is-layout-flex wp-container-core-buttons-layout-2 wp-block-buttons-is-layout-flex\">\n<div class=\"wp-block-button has-custom-font-size is-style-accent plausible-event-name=Block+DevFund+Button has-medium-font-size\"><a class=\"wp-block-button__link wp-element-button\" href=\"https://fund.blender.org/?utm_medium=reusable-block\" rel=\"noreferrer noopener\" target=\"_blank\"><strong>Donate</strong> to Blender</a></div>\n</div>\n</div>"
      }
    ],
    "wfw_commentrss": "https://code.blender.org/2023/12/a-new-developer-documentation-platform/feed/",
    "slash_comments": "2"
  }
}